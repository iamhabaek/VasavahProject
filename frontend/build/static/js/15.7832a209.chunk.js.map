{"version":3,"sources":["../node_modules/react-bootstrap/esm/Badge.js","app/views/classrooms/ListView.js","app/views/classrooms/CardView.js","app/views/classrooms/SlotApplicationList.js","../node_modules/react-bootstrap/esm/Spinner.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/Container.js"],"names":["Badge","React","forwardRef","_ref","ref","bsPrefix","variant","pill","className","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","ListView","subjects","teachers","classrooms","classroomSlots","handleApprove","handleDeny","search","Container","Col","lg","md","sm","xs","map","head","idx","key","scope","slot","id","find","classroom","resourceId","title","teacher","teacherName","subject","label","course","yearLevel","days","day","format","created","isApproved","Dropdown","Toggle","Menu","Item","onClick","e","length","CardView","loading","filter","data","name","toLowerCase","includes","photoURL","round","size","src","style","backgroundColor","Date","Button","disabled","type","Spinner","role","aria-hidden","animation","SlotApplicationList","useContext","AppContext","dispatch","token","user","useState","cardView","setCardView","listView","setListView","setLoading","checked","setChecked","useHistory","a","approveSlot","Swal","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","denySlot","getFiltered","routeSegments","path","onChange","defaultChecked","fallback","children","bsSpinnerPrefix","DEVICE_SIZES","spans","classes","forEach","brkPoint","span","offset","order","propValue","_propValue$span","infix","push","apply","concat","fluid","suffix"],"mappings":"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","file":"static/js/15.7832a209.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import React from \"react\";\r\nimport { Badge, Dropdown } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Container } from \"react-bootstrap\";\r\nimport format from \"date-fns/format\";\r\nconst ListView = ({\r\n  subjects,\r\n  teachers,\r\n  classrooms,\r\n  classroomSlots,\r\n  handleApprove,\r\n  search,\r\n  handleDeny,\r\n}) => {\r\n  const theadEl = [\r\n    \"ROOM\",\r\n    \"TEACHER\",\r\n    \"SUBJECT\",\r\n    \"COURSE\",\r\n    \"YEAR LEVEL\",\r\n    \"DAYS\",\r\n    \"DATE APPLIED\",\r\n    \"STATUS\",\r\n    \"ACTIONS\",\r\n  ];\r\n\r\n  return (\r\n    <Container>\r\n      <Col lg={12} md={12} sm={8} xs={12} className=\"mb-4\">\r\n        <div className=\"card border-0\">\r\n          <div className=\"card-body border-0\">\r\n            <table className=\"table \">\r\n              <thead>\r\n                <tr className=\"ul-widget6__tr--sticky-th\">\r\n                  {theadEl.map((head, idx) => (\r\n                    <th key={idx} scope=\"col\" className=\"border-0 text-primary\">\r\n                      {head}\r\n                    </th>\r\n                  ))}\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>\r\n                {classroomSlots &&\r\n                  classroomSlots.map((slot) => (\r\n                    <tr key={slot.id}>\r\n                      <td className=\"border-0\">\r\n                        <span>\r\n                          {classrooms.find(\r\n                            (classroom) => classroom.id === slot.resourceId\r\n                          ) &&\r\n                            classrooms.find(\r\n                              (classroom) => classroom.id === slot.resourceId\r\n                            ).title}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"border-0\">\r\n                        {\" \"}\r\n                        {teachers.find(\r\n                          (teacher) => teacher.id === slot.teacher\r\n                        ) &&\r\n                          teachers.find(\r\n                            (teacher) => teacher.id === slot.teacher\r\n                          ).teacherName}\r\n                      </td>\r\n                      <td className=\"border-0\">\r\n                        <span>{slot.subject.label}</span>\r\n                      </td>\r\n                      <td className=\"border-0\">{slot.course.label}</td>\r\n                      <td className=\"border-0\">{slot.yearLevel.label}</td>\r\n                      <td className=\"border-0\">\r\n                        <div className=\"d-flex flex-column\">\r\n                          {slot.days.map((day) => (\r\n                            <span>{day}</span>\r\n                          ))}\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"border-0\">\r\n                        {\" \"}\r\n                        {format(slot.created, \"yyyy/MM/dd HH:mm: a\")}\r\n                      </td>\r\n                      <td className=\"border-0\">\r\n                        <Badge\r\n                          variant={slot.isApproved ? \"success\" : \"warning\"}\r\n                        >\r\n                          {slot.isApproved ? \"Approved\" : \"Pending\"}\r\n                        </Badge>\r\n                      </td>\r\n                      <td className=\"border-0\">\r\n                        <Dropdown>\r\n                          <Dropdown.Toggle className=\" mr-3 mb-3 toggle-hidden bg-white border-none d-flex flex-column\">\r\n                            <span className=\"_dot _inline-dot bg-primary mb-1\"></span>\r\n                            <span className=\"_dot _inline-dot bg-primary mb-1\"></span>\r\n                            <span className=\"_dot _inline-dot bg-primary\"></span>\r\n                          </Dropdown.Toggle>\r\n                          <Dropdown.Menu>\r\n                            <Dropdown.Item\r\n                              onClick={(e) => handleApprove(slot.id)}\r\n                              className=\"dropdown-item cursor-pointer\"\r\n                            >\r\n                              Approve\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item\r\n                              onClick={(e) => handleDeny(slot.id)}\r\n                              className=\"dropdown-item cursor-pointer\"\r\n                            >\r\n                              Deny\r\n                            </Dropdown.Item>\r\n                          </Dropdown.Menu>\r\n                        </Dropdown>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          {classroomSlots.length === 0 && (\r\n            <div className=\"mx-auto border border-light rounded p-3 pb-0 mb-5\">\r\n              <p className=\"text-center text-muted\">No slots to approve</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Col>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ListView;\r\n","import React from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport { Col, Container, Button, Spinner } from \"react-bootstrap\";\r\nimport Avatar from \"react-avatar\";\r\n// Students list card view\r\nconst CardView = ({\r\n  subjects,\r\n  teachers,\r\n  classrooms,\r\n  classroomSlots,\r\n  handleApprove,\r\n  search,\r\n  loading,\r\n  handleDeny,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Col lg={12} md={12} sm={8} xs={12} className=\"mb-4\">\r\n          <div className=\"row\">\r\n            {classroomSlots &&\r\n              classroomSlots\r\n                .filter((data) =>\r\n                  search === \"\"\r\n                    ? data\r\n                    : data.name.toLowerCase().includes(search)\r\n                )\r\n                .map((slot) => (\r\n                  <div\r\n                    key={slot.id}\r\n                    className=\"app-card text-sm col-lg-4 col-sm-4\"\r\n                  >\r\n                    <div className=\" border-none shadow card\">\r\n                      <div className=\"clearFix\">\r\n                        <div\r\n                          className={`${\r\n                            slot.isApproved === false\r\n                              ? \" text-warning\"\r\n                              : \"text-success\"\r\n                          } float-left p-2`}\r\n                        >\r\n                          <strong>{slot.isApproved}</strong>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\".d-block mx-auto mw-100 text-center p-3\">\r\n                        {teachers.find(\r\n                          (teacher) => teacher.id === slot.teacher\r\n                        ) &&\r\n                        teachers.find((teacher) => teacher.id === slot.teacher)\r\n                          .photoURL ? (\r\n                          <Avatar\r\n                            round\r\n                            size={80}\r\n                            src={\r\n                              teachers.find(\r\n                                (teacher) => teacher.id === slot.teacher\r\n                              ).photoURL\r\n                            }\r\n                          />\r\n                        ) : (\r\n                          <Avatar\r\n                            size={80}\r\n                            round\r\n                            name={\r\n                              teachers.find(\r\n                                (teacher) => teacher.id === slot.teacher\r\n                              ) &&\r\n                              teachers.find(\r\n                                (teacher) => teacher.id === slot.teacher\r\n                              ).teacherName\r\n                            }\r\n                          />\r\n                        )}\r\n                      </div>\r\n                      <div\r\n                        style={{ backgroundColor: \"#E7E5F1\" }}\r\n                        className=\".d-block mw-100 \"\r\n                      >\r\n                        <p className=\"font-weight-bold text-15 text-center p-2\">\r\n                          {teachers.find(\r\n                            (teacher) => teacher.id === slot.teacher\r\n                          ) &&\r\n                            teachers.find(\r\n                              (teacher) => teacher.id === slot.teacher\r\n                            ).teacherName}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"d-flex flex-row justify-content-between py-2 px-2 align-items-center\">\r\n                        <span className=\"text-12 font-weight-bold \">\r\n                          Date applied:\r\n                        </span>\r\n                        <span className=\"text-12\">\r\n                          {format(new Date(slot.created), \"MM/dd/yyyy HH:mm a\")}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"d-flex flex-row justify-content-between py-2 px-2 align-items-center\">\r\n                        <span className=\"text-12 font-weight-bold \">Room:</span>\r\n                        <span className=\"text-12\">\r\n                          {classrooms.find(\r\n                            (classroom) => classroom.id === slot.resourceId\r\n                          ) &&\r\n                            classrooms.find(\r\n                              (classroom) => classroom.id === slot.resourceId\r\n                            ).title}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"d-flex flex-row justify-content-between py-2 px-2 align-items-center\">\r\n                        <span className=\"text-12 font-weight-semibold \">\r\n                          Subject:\r\n                        </span>\r\n                        <span className=\"text-12\">{slot.subject.label}</span>\r\n                      </div>\r\n                      <div className=\"d-flex flex-row justify-content-between py-2 px-2 align-items-center\">\r\n                        <span className=\"text-12 font-weight-semibold \">\r\n                          Course:\r\n                        </span>\r\n                        <span className=\"text-12\">{slot.course.label}</span>\r\n                      </div>\r\n                      <div className=\"d-flex flex-row justify-content-between py-2 px-2 align-items-center\">\r\n                        <span className=\"text-12 font-weight-semibold \">\r\n                          Year Level:\r\n                        </span>\r\n                        <span className=\"text-12\">{slot.yearLevel.label}</span>\r\n                      </div>\r\n                      <div className=\"d-flex flex-row justify-content-between py-2 px-2 align-items-center\">\r\n                        <span className=\"text-12 font-weight-semibold \">\r\n                          Days:\r\n                        </span>\r\n                        <div className=\"d-flex flex-column\">\r\n                          {slot.days.map((day, idx) => (\r\n                            <span key={idx}>{day}, </span>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n\r\n                      {slot.isApproved === false && (\r\n                        <div className=\"card-footer\">\r\n                          <div className=\"mc-footer\">\r\n                            <div className=\"d-flex flex-row justify-content-center align-items-center mt-3\">\r\n                              <Button\r\n                                disabled={loading}\r\n                                variant=\"success\"\r\n                                type=\"submit\"\r\n                                className=\"btn-sm mr-2\"\r\n                                onClick={(e) => handleApprove(slot.id)}\r\n                              >\r\n                                {loading && (\r\n                                  <Spinner\r\n                                    as=\"span\"\r\n                                    variant=\"light\"\r\n                                    size=\"sm\"\r\n                                    role=\"status\"\r\n                                    aria-hidden=\"true\"\r\n                                    animation=\"border\"\r\n                                    className=\"ml-2\"\r\n                                  />\r\n                                )}\r\n                                Approve\r\n                              </Button>\r\n                              <Button\r\n                                variant=\"warning\"\r\n                                type=\"submit\"\r\n                                className=\"btn-sm\"\r\n                                onClick={(e) => handleDeny(slot.id)}\r\n                              >\r\n                                Deny\r\n                              </Button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n          </div>\r\n        </Col>\r\n      </Container>\r\n      {classroomSlots.length === 0 && (\r\n        <div className=\"mx-auto p-3 pb-0 mb-5\">\r\n          <p className=\"text-center text-muted\">No slots to approve</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardView;\r\n","import React, { useContext, useState, Fragment } from \"react\";\r\nimport AppContext from \"app/appContext\";\r\nimport { Col, Button } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport ListView from \"./ListView\";\r\nimport CardView from \"./CardView\";\r\nimport { Breadcrumb, Loading } from \"@gull\";\r\nimport { approveSlot, denySlot } from \"app/reducers/actions/ClassroomActions\";\r\nimport Swal from \"sweetalert2\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { Suspense } from \"react\";\r\nconst SlotApplicationList = () => {\r\n  const {\r\n    classroomSlots,\r\n    dispatch,\r\n    user,\r\n    token,\r\n    teachers,\r\n    subjects,\r\n    classrooms,\r\n  } = useContext(AppContext);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [cardView, setCardView] = useState(true);\r\n  const [listView, setListView] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [checked, setChecked] = useState(false);\r\n  const history = useHistory();\r\n  const handleApprove = async (id) => {\r\n    setLoading(true);\r\n    await approveSlot(id, { isApproved: true }, token)(dispatch);\r\n    setLoading(false);\r\n  };\r\n  const handleDeny = async (id) => {\r\n    Swal.fire({\r\n      title: \"Confirm to Deny\",\r\n      text: \"Are you sure you want to deny? \",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes\",\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        await denySlot(id, token)(dispatch);\r\n      }\r\n    });\r\n  };\r\n\r\n  const getFiltered = (checked) => {\r\n    if (checked) {\r\n      const filteredSlots = classroomSlots.filter(\r\n        (slot) => slot.isApproved === true\r\n      );\r\n      return filteredSlots;\r\n    } else {\r\n      const filteredSlots = classroomSlots.filter(\r\n        (slot) => slot.isApproved === false\r\n      );\r\n      return filteredSlots;\r\n    }\r\n  };\r\n  // Change to Card View function\r\n  const handleCardView = () => {\r\n    setListView(false);\r\n    setCardView(true);\r\n  };\r\n  // Change to List View function\r\n  const handleListView = () => {\r\n    setCardView(false);\r\n    setListView(true);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumb\r\n        routeSegments={[\r\n          { name: \"Home\", path: \"/\" },\r\n          { name: \"Slot Application List\" },\r\n        ]}\r\n      />\r\n      <Col lg={12} md={12} sm={8} xs={12} className=\"mb-4\">\r\n        <div className=\"ul-widget__head border-0\">\r\n          <div className=\"ul-widget__head-label\"></div>\r\n        </div>\r\n        <div className=\"col-xl-12 my-5\">\r\n          <div className=\"form-group\">\r\n            <input\r\n              className=\"mr-2\"\r\n              type=\"checkbox\"\r\n              onChange={() => setChecked(!checked)}\r\n              name=\"checked\"\r\n              defaultChecked={checked}\r\n            />\r\n            <label>Completed Applications</label>\r\n          </div>\r\n          <div className=\"text-right form-group\">\r\n            <label className=\"text-dark\">View By: </label>\r\n            <div className=\"btn-group ml-1\">\r\n              <button\r\n                title=\"ListView\"\r\n                onClick={handleListView}\r\n                className={\r\n                  listView\r\n                    ? \"btn btn-primary btn-sm\"\r\n                    : \"btn btn-outline-primary btn-sm\"\r\n                }\r\n              >\r\n                <i className=\"i-Newspaper\"></i>\r\n              </button>\r\n              <button\r\n                title=\"Widgets\"\r\n                onClick={handleCardView}\r\n                className={\r\n                  cardView\r\n                    ? \"btn btn-primary btn-sm\"\r\n                    : \"btn btn-outline-primary btn-sm\"\r\n                }\r\n              >\r\n                <i className=\"i-Split-Four-Square-Window\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {listView && (\r\n          // List View Component\r\n          <Suspense fallback={<Loading></Loading>}>\r\n            <ListView\r\n              teachers={teachers}\r\n              subjects={subjects}\r\n              classrooms={classrooms}\r\n              search={search}\r\n              classroomSlots={getFiltered(checked)}\r\n              handleApprove={handleApprove}\r\n              handleDeny={handleDeny}\r\n              loading={loading}\r\n            />\r\n          </Suspense>\r\n        )}\r\n        {cardView && (\r\n          // Card View Component\r\n          <CardView\r\n            teachers={teachers}\r\n            subjects={subjects}\r\n            classrooms={classrooms}\r\n            classroomSlots={getFiltered(checked)}\r\n            search={search}\r\n            handleApprove={handleApprove}\r\n            handleDeny={handleDeny}\r\n            loading={loading}\r\n          />\r\n        )}\r\n      </Col>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SlotApplicationList;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Spinner = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      animation = _ref.animation,\n      size = _ref.size,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"animation\", \"size\", \"children\", \"as\", \"className\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  var bsSpinnerPrefix = bsPrefix + \"-\" + animation;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsSpinnerPrefix, size && bsSpinnerPrefix + \"-\" + size, variant && \"text-\" + variant)\n  }), children);\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span, offset, order;\n\n    if (propValue != null && typeof propValue === 'object') {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span != null) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false\n};\nvar Container = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      fluid = _ref.fluid,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"fluid\", \"as\", \"className\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'container');\n  var suffix = typeof fluid === 'string' ? \"-\" + fluid : '-fluid';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, fluid ? \"\" + prefix + suffix : prefix)\n  }));\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;"],"sourceRoot":""}