{"version":3,"sources":["app/views/teachers/ListView.js","app/views/teachers/CardView.js","app/views/teachers/TeachersList.js","../node_modules/nanoid/index.browser.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/Container.js"],"names":["ListView","list","search","handleEdit","handleDelete","Container","Col","lg","md","sm","xs","className","map","head","idx","key","scope","length","filter","data","teacherName","toLowerCase","includes","id","birthDate","subjects","subject","label","phone","gender","address","format","created","Dropdown","Toggle","Menu","onClick","e","Item","CardView","loading","photoURL","round","size","src","name","style","backgroundColor","email","Button","variant","type","TeachersList","useContext","AppContext","teachers","dispatch","user","token","useState","setLoading","setSearch","history","useHistory","cardView","setCardView","listView","setListView","push","a","notifications","nanoid","Date","now","isViewed","action","content","location","description","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","deleteTeacher","console","log","routeSegments","path","to","placeholder","onChange","target","value","alignLeft","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","DEVICE_SIZES","React","forwardRef","_ref","ref","bsPrefix","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","spans","classes","forEach","brkPoint","span","offset","order","propValue","_propValue$span","infix","createElement","_extends","classNames","apply","concat","displayName","fluid","suffix","defaultProps"],"mappings":"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","file":"static/js/30.761bfca4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Dropdown, Col, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nconst ListView = ({ list, search, handleEdit, handleDelete }) => {\r\n  const theadEl = [\r\n    \"NAME\",\r\n    \"BIRTH DATE\",\r\n    \"SUBJECTS\",\r\n    \"PHONE\",\r\n    \"GENDER\",\r\n    \"ADDRESS\",\r\n    \"DATE ADDED\",\r\n    \"ACTIONS\",\r\n  ];\r\n  return (\r\n    <Container>\r\n      <Col lg={12} md={12} sm={8} xs={12} className=\"mb-4\">\r\n        <div className=\"card border-0\">\r\n          <div className=\"card-body border-0\">\r\n            <table className=\"table \">\r\n              <thead>\r\n                <tr className=\"ul-widget6__tr--sticky-th\">\r\n                  {theadEl.map((head, idx) => (\r\n                    <th key={idx} scope=\"col\" className=\"border-0 text-primary\">\r\n                      {head}\r\n                    </th>\r\n                  ))}\r\n                </tr>\r\n              </thead>\r\n              {list.length !== 0 && (\r\n                <tbody>\r\n                  {list\r\n                    .filter((data) =>\r\n                      search === \"\"\r\n                        ? data\r\n                        : data.teacherName.toLowerCase().includes(search)\r\n                    )\r\n                    .map((data) => (\r\n                      <tr className=\"border-bottom border-dotted\" key={data.id}>\r\n                        <td className=\"border-0\">\r\n                          <span>{data.teacherName}</span>\r\n                        </td>\r\n                        <td className=\"border-0\">\r\n                          <span>{data.birthDate}</span>\r\n                        </td>\r\n                        <td className=\"border-0\">\r\n                          <div className=\"d-flex flex-column\">\r\n                            {data.subjects.map((subject, idx) => (\r\n                              <span key={idx}>{subject.label}</span>\r\n                            ))}\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"border-0\">\r\n                          <span>{data.phone}</span>\r\n                        </td>\r\n                        <td className=\"border-0\">\r\n                          <span>{data.gender}</span>\r\n                        </td>\r\n                        <td className=\"border-0\">\r\n                          <span>{data.address}</span>\r\n                        </td>\r\n\r\n                        <td className=\"border-0\">\r\n                          <span>\r\n                            {format(data.created, \"yyyy/MM/dd HH:mm: a\")}\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"border-0\">\r\n                          <Dropdown>\r\n                            <Dropdown.Toggle className=\"custom mr-3 mb-3 toggle-hidden bg-white border-none d-flex flex-column\">\r\n                              <span className=\"_dot _inline-dot bg-primary mb-1\"></span>\r\n                              <span className=\"_dot _inline-dot bg-primary mb-1\"></span>\r\n                              <span className=\"_dot _inline-dot bg-primary mb-1\"></span>\r\n                            </Dropdown.Toggle>\r\n                            <Dropdown.Menu>\r\n                              <Link\r\n                                onClick={(e) => handleEdit(data.id)}\r\n                                className=\"dropdown-item cursor-pointer\"\r\n                              >\r\n                                Edit\r\n                              </Link>\r\n                              <Dropdown.Item\r\n                                onClick={(e) =>\r\n                                  handleDelete(data.id, data.teacherName)\r\n                                }\r\n                                className=\"dropdown-item cursor-pointer\"\r\n                              >\r\n                                Delete\r\n                              </Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                          </Dropdown>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              )}\r\n            </table>\r\n          </div>\r\n\r\n          {list.length === 0 && (\r\n            <div className=\"mx-auto border border-light rounded p-3 pb-0 mb-5\">\r\n              <p className=\"text-center text-muted\">No Data Found</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Col>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ListView;\r\n","import React from \"react\";\r\nimport Avatar from \"react-avatar\";\r\nimport format from \"date-fns/format\";\r\nimport { Col, Container, Button, Spinner } from \"react-bootstrap\";\r\nconst CardView = ({ list, loading, search, handleEdit, handleDelete }) => {\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <div className=\"row\">\r\n          {list\r\n            .filter((data) =>\r\n              search === \"\"\r\n                ? data\r\n                : data.teacherName.toLowerCase().includes(search)\r\n            )\r\n            .map((data) => (\r\n              <div key={data.id} className=\"app-card text-sm col-lg-4 col-sm-4\">\r\n                <div className=\" border-none shadow card\">\r\n                  <div className=\"clearFix\"></div>\r\n\r\n                  <div className=\".d-block mx-auto mw-100 p-3\">\r\n                    {data.photoURL ? (\r\n                      <Avatar round size={80} src={data.photoURL} />\r\n                    ) : (\r\n                      <Avatar round size={80} name={data.teacherName} />\r\n                    )}\r\n                  </div>\r\n                  <div\r\n                    style={{ backgroundColor: \"#E7E5F1\" }}\r\n                    className=\".d-block mw-100 \"\r\n                  >\r\n                    <p className=\"font-weight-bold text-15 text-center p-2\">{`${data.teacherName}`}</p>\r\n                  </div>\r\n                  <div className=\"d-flex flex-row justify-content-between py-2 px-2 align-items-center\">\r\n                    <span className=\"text-12 font-weight-bold \">\r\n                      Date added:\r\n                    </span>\r\n                    <span className=\"text-12\">\r\n                      {format(data.created, \"yyyy/MM/dd HH:mm: a\")}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"d-flex flex-row justify-content-between py-2 px-2 align-items-center\">\r\n                    <span className=\"text-12 font-weight-semibold \">\r\n                      Subjects:\r\n                    </span>\r\n                    <div className=\"d-flex flex-column\">\r\n                      {data.subjects.map((subject) => (\r\n                        <span className=\"text-12\">{subject.label}</span>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex flex-row justify-content-between py-2 px-2 align-items-center\">\r\n                    <span className=\"text-12 font-weight-semibold \">\r\n                      Address:\r\n                    </span>\r\n                    <span className=\"text-12\">{data.address}</span>\r\n                  </div>\r\n                  <div className=\"d-flex flex-row justify-content-between py-2 px-2 align-items-center\">\r\n                    <span className=\"text-12 font-weight-semibold \">\r\n                      Birth Date:\r\n                    </span>\r\n                    <span className=\"text-12\">{data.birthDate}</span>\r\n                  </div>\r\n                  <div className=\"d-flex flex-row justify-content-between py-2 px-2 align-items-center\">\r\n                    <span className=\"text-12 font-weight-semibold \">\r\n                      Gender:\r\n                    </span>\r\n                    <span className=\"text-12\">{data.gender}</span>\r\n                  </div>\r\n                  <div className=\"d-flex flex-row justify-content-between py-2 px-2 align-items-center\">\r\n                    <span className=\"text-12 font-weight-semibold \">\r\n                      Address:\r\n                    </span>\r\n                    <span className=\"text-12\">{data.phone}</span>\r\n                  </div>\r\n\r\n                  <div className=\"d-flex flex-row justify-content-between py-2 px-2 align-items-center\">\r\n                    <span className=\"text-12 font-weight-semibold \">\r\n                      Email:\r\n                    </span>\r\n                    <span className=\"text-12\">{data.email}</span>\r\n                  </div>\r\n                  <div className=\"card-footer\">\r\n                    <div className=\"mc-footer\">\r\n                      <div\r\n                        className=\"d-flex flex-row justify-content-center align-items-center \r\n              \"\r\n                      >\r\n                        <button\r\n                          className=\"btn btn-sm btn-info px-2 text-12 py-1 mr-2  \"\r\n                          onClick={(e) => handleEdit(data.id)}\r\n                        >\r\n                          Edit\r\n                        </button>\r\n                        <Button\r\n                          variant=\"danger\"\r\n                          type=\"submit\"\r\n                          className=\"btn-sm\"\r\n                          onClick={(e) =>\r\n                            handleDelete(data.id, data.teacherName)\r\n                          }\r\n                        >\r\n                          Delete\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n        {list.length === 0 && (\r\n          <div className=\"d-flex justify-content-center p-3 pb-0 mb-5\">\r\n            <p className=\"text-center text-muted\">No Data Found</p>\r\n          </div>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardView;\r\n","import React, { useContext, useState, Fragment } from \"react\";\r\nimport AppContext from \"app/appContext\";\r\nimport { Col, Button, Container } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport ListView from \"./ListView\";\r\nimport CardView from \"./CardView\";\r\nimport { Breadcrumb } from \"@gull\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { deleteTeacher } from \"app/reducers/actions/ClassroomActions\";\r\nimport Swal from \"sweetalert2\";\r\nconst TeachersList = () => {\r\n  const { teachers, dispatch, user, token } = useContext(AppContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  const [cardView, setCardView] = useState(true);\r\n  const [listView, setListView] = useState(false);\r\n  // redirect to edit page function\r\n  const handleEdit = (id) => {\r\n    history.push(`/teachers/edit/${id}`);\r\n  };\r\n  // delete teacher function\r\n  const handleDelete = async (id, name) => {\r\n    const notifications = {\r\n      id: nanoid(),\r\n      created: Date.now(),\r\n      user: user.email,\r\n      isViewed: false,\r\n      action: \"delete\",\r\n      content: {\r\n        name: name,\r\n        location: \"teacher\",\r\n        description: \"click to see more information\",\r\n      },\r\n    };\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        try {\r\n          setLoading(true);\r\n          await deleteTeacher(id, notifications, token)(dispatch);\r\n          Swal.fire(\"Deleted!\", \"Teacher has been deleted.\", \"success\");\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    });\r\n    setLoading(false);\r\n  };\r\n  const handleCardView = () => {\r\n    setListView(false);\r\n    setCardView(true);\r\n  };\r\n  const handleListView = () => {\r\n    setCardView(false);\r\n    setListView(true);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumb\r\n        routeSegments={[{ name: \"Home\", path: \"/\" }, { name: \"Teachers List\" }]}\r\n      />\r\n      <Container>\r\n        {teachers && (\r\n          <Col lg={12} md={12} sm={8} xs={12} className=\"mb-4\">\r\n            <div className=\"ul-widget__head border-0 mb-2\">\r\n              <div className=\"ul-widget__head-label\">\r\n                <Link to=\"/teachers/add-teacher\">\r\n                  <Button>\r\n                    {\" \"}\r\n                    <i className=\"nav-icon i-Add\"></i> Add Teacher\r\n                  </Button>\r\n                </Link>\r\n              </div>\r\n              <div className=\"d-flex flex-column\">\r\n                <form className=\"mr-5\">\r\n                  <input\r\n                    className=\"form-control \"\r\n                    type=\"search\"\r\n                    placeholder=\"Search Here....\"\r\n                    onChange={(e) => setSearch(e.target.value.toLowerCase())}\r\n                  />\r\n                </form>\r\n                <div>\r\n                  <Link\r\n                    to=\"/teachers/report\"\r\n                    alignLeft\r\n                    className=\"btn btn-success mr-auto px-3 py-1 mt-5\"\r\n                  >\r\n                    Generate Report\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xl-12 my-5\">\r\n              <div className=\"text-right form-group\">\r\n                <label className=\"text-dark\">View By: </label>\r\n                <div className=\"btn-group ml-1\">\r\n                  <button\r\n                    title=\"ListView\"\r\n                    onClick={handleListView}\r\n                    className={\r\n                      listView\r\n                        ? \"btn btn-primary btn-sm\"\r\n                        : \"btn btn-outline-primary btn-sm\"\r\n                    }\r\n                  >\r\n                    <i className=\"i-Newspaper\"></i>\r\n                  </button>\r\n                  <button\r\n                    title=\"Widgets\"\r\n                    onClick={handleCardView}\r\n                    className={\r\n                      cardView\r\n                        ? \"btn btn-primary btn-sm\"\r\n                        : \"btn btn-outline-primary btn-sm\"\r\n                    }\r\n                  >\r\n                    <i className=\"i-Split-Four-Square-Window\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {listView && (\r\n              <ListView\r\n                list={teachers}\r\n                search={search}\r\n                handleEdit={handleEdit}\r\n                loading={loading}\r\n                handleDelete={handleDelete}\r\n              />\r\n            )}\r\n            {cardView && (\r\n              <CardView\r\n                list={teachers}\r\n                search={search}\r\n                loading={loading}\r\n                handleEdit={handleEdit}\r\n                handleDelete={handleDelete}\r\n              />\r\n            )}\r\n          </Col>\r\n        )}\r\n      </Container>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TeachersList;\r\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span, offset, order;\n\n    if (propValue != null && typeof propValue === 'object') {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span != null) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false\n};\nvar Container = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      fluid = _ref.fluid,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"fluid\", \"as\", \"className\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'container');\n  var suffix = typeof fluid === 'string' ? \"-\" + fluid : '-fluid';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, fluid ? \"\" + prefix + suffix : prefix)\n  }));\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;"],"sourceRoot":""}