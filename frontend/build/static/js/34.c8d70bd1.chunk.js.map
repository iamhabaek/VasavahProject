{"version":3,"sources":["app/views/reports/ExcelData.js","app/views/reports/ExcelReport.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-html-table-to-excel/index.js"],"names":["ExcelData","classroomSlot","classrooms","subjects","teachers","studentsList","students","filter","student","studentsId","find","studentId","id","Col","lg","md","sm","xs","className","scope","map","name","address","phone","gender","course","yearLevel","status","table","filename","sheet","buttonText","ExcelReport","useContext","AppContext","classroomSlots","useParams","useHistory","routeSegments","path","DEVICE_SIZES","React","forwardRef","_ref","ref","bsPrefix","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","spans","classes","forEach","brkPoint","span","offset","order","propValue","_propValue$span","infix","push","length","createElement","_extends","classNames","apply","concat","displayName","Object","defineProperty","exports","value","_createClass","defineProperties","target","i","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_react","require","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","default","propTypes","string","isRequired","ReactHTMLTableToExcel","_Component","instance","TypeError","_classCallCheck","this","_this","self","call","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","handleDownload","bind","subClass","superClass","create","constructor","setPrototypeOf","_inherits","document","getElementById","nodeType","nodeName","outerHTML","String","context","worksheet","window","navigator","msSaveOrOpenBlob","blobObject","Blob","click","element","href","base64","format","download","body","appendChild","removeChild","type","onClick","s","btoa","unescape","encodeURIComponent","c","replace","m","p","defaultProps"],"mappings":"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","file":"static/js/34.c8d70bd1.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Col } from \"react-bootstrap\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\n\r\nconst ExcelData = ({\r\n  classroomSlot,\r\n  classrooms,\r\n  teachers,\r\n  subjects,\r\n  students,\r\n}) => {\r\n  const studentsList = students.filter((student) => {\r\n    return (\r\n      classroomSlot &&\r\n      classroomSlot.studentsId.find((studentId) => {\r\n        return student.id === studentId;\r\n      })\r\n    );\r\n  });\r\n  return (\r\n    <div>\r\n      {classroomSlot && classrooms && subjects && (\r\n        <Col lg={12} md={12} sm={8} xs={12} className=\"mb-4\">\r\n          <div className=\"card h-100 w-100\">\r\n            <div className=\"card-body\">\r\n              <div className=\"ul-widget-body\">\r\n                <div className=\"ul-widget3\">\r\n                  <div className=\"ul-widget6__item--table\">\r\n                    <table className=\"table \" id=\"table-xls\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th scope=\"col\">Student Name</th>\r\n                          <th scope=\"col\">Address</th>\r\n                          <th scope=\"col\">Phone</th>\r\n                          <th scope=\"col\">Gender</th>\r\n                          <th scope=\"col\">Course</th>\r\n                          <th scope=\"col\">Year Level</th>\r\n                          <th scope=\"col\">Status</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {studentsList.map((student) => (\r\n                          <tr>\r\n                            <td>{student.name}</td>\r\n                            <td>{student.address}</td>\r\n                            <td>{student.phone}</td>\r\n                            <td>{student.gender}</td>\r\n\r\n                            <td> {student.course}</td>\r\n                            <td> {student.yearLevel}</td>\r\n                            <td>{student.status}</td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      )}\r\n      <ReactHTMLTableToExcel\r\n        id=\"test-table-xls-button\"\r\n        className=\"btn btn-primary px-3 py-1\"\r\n        table=\"table-xls\"\r\n        filename=\"table_data\"\r\n        sheet=\"table_data\"\r\n        buttonText=\"Download\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExcelData;\r\n","import React, { useContext, Fragment } from \"react\";\r\nimport AppContext from \"app/appContext\";\r\nimport { Breadcrumb } from \"@gull\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport ExcelData from \"./ExcelData\";\r\nconst ExcelReport = () => {\r\n  const { classrooms, students, classroomSlots, teachers, subjects } =\r\n    useContext(AppContext);\r\n\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const classroomSlot = classroomSlots.find(\r\n    (classroomSlot) => classroomSlot.id === id\r\n  );\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumb\r\n        routeSegments={[\r\n          { name: \"Home\", path: \"/\" },\r\n          {\r\n            name: \"My Classes\",\r\n            path: \"/classrooms/my-classes/\",\r\n          },\r\n          { name: \"Generate\" },\r\n        ]}\r\n      />\r\n      <ExcelData\r\n        classrooms={classrooms}\r\n        students={students}\r\n        classroomSlot={classroomSlot}\r\n        teachers={teachers}\r\n        subjects={subjects}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ExcelReport;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span, offset, order;\n\n    if (propValue != null && typeof propValue === 'object') {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span != null) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global window, document, Blob */\n\n\nvar propTypes = {\n  table: _propTypes2.default.string.isRequired,\n  filename: _propTypes2.default.string.isRequired,\n  sheet: _propTypes2.default.string.isRequired,\n  id: _propTypes2.default.string,\n  className: _propTypes2.default.string,\n  buttonText: _propTypes2.default.string\n};\n\nvar defaultProps = {\n  id: 'button-download-as-xls',\n  className: 'button-download',\n  buttonText: 'Download'\n};\n\nvar ReactHTMLTableToExcel = function (_Component) {\n  _inherits(ReactHTMLTableToExcel, _Component);\n\n  function ReactHTMLTableToExcel(props) {\n    _classCallCheck(this, ReactHTMLTableToExcel);\n\n    var _this = _possibleConstructorReturn(this, (ReactHTMLTableToExcel.__proto__ || Object.getPrototypeOf(ReactHTMLTableToExcel)).call(this, props));\n\n    _this.handleDownload = _this.handleDownload.bind(_this);\n    return _this;\n  }\n\n  _createClass(ReactHTMLTableToExcel, [{\n    key: 'handleDownload',\n    value: function handleDownload() {\n      if (!document) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Failed to access document object');\n        }\n\n        return null;\n      }\n\n      if (document.getElementById(this.props.table).nodeType !== 1 || document.getElementById(this.props.table).nodeName !== 'TABLE') {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Provided table property is not html table element');\n        }\n\n        return null;\n      }\n\n      var table = document.getElementById(this.props.table).outerHTML;\n      var sheet = String(this.props.sheet);\n      var filename = String(this.props.filename) + '.xls';\n\n      var uri = 'data:application/vnd.ms-excel;base64,';\n      var template = '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>{table}</body></html>';\n\n      var context = {\n        worksheet: sheet || 'Worksheet',\n        table: table\n      };\n\n      // If IE11\n      if (window.navigator.msSaveOrOpenBlob) {\n        var fileData = ['' + ('<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>') + table + '</body></html>'];\n        var blobObject = new Blob(fileData);\n        document.getElementById('react-html-table-to-excel').click()(function () {\n          window.navigator.msSaveOrOpenBlob(blobObject, filename);\n        });\n\n        return true;\n      }\n\n      var element = window.document.createElement('a');\n      element.href = uri + ReactHTMLTableToExcel.base64(ReactHTMLTableToExcel.format(template, context));\n      element.download = filename;\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n\n      return true;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(\n        'button',\n        {\n          id: this.props.id,\n          className: this.props.className,\n          type: 'button',\n          onClick: this.handleDownload\n        },\n        this.props.buttonText\n      );\n    }\n  }], [{\n    key: 'base64',\n    value: function base64(s) {\n      return window.btoa(unescape(encodeURIComponent(s)));\n    }\n  }, {\n    key: 'format',\n    value: function format(s, c) {\n      return s.replace(/{(\\w+)}/g, function (m, p) {\n        return c[p];\n      });\n    }\n  }]);\n\n  return ReactHTMLTableToExcel;\n}(_react.Component);\n\nReactHTMLTableToExcel.propTypes = propTypes;\nReactHTMLTableToExcel.defaultProps = defaultProps;\n\nexports.default = ReactHTMLTableToExcel;\n"],"sourceRoot":""}