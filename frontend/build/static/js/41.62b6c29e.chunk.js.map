{"version":3,"sources":["app/views/masterClass/CustomSelect.js","app/views/masterClass/SwapSlot.js","../node_modules/react-bootstrap/esm/Spinner.js"],"names":["onChange","options","value","className","find","option","defaultValue","basicFormSchema","yup","shape","timeSlot","required","SwapSLot","useContext","AppContext","classrooms","classroomSlots","teachers","user","dispatch","subjects","token","id","useParams","useState","loading","setLoading","classroomSlot","filter","slot","resourceId","map","label","classroom","title","startTime","endTime","teacher","teacherName","subject","course","handleSubmit","values","a","slot1","slot2","updatedValues","slot1Id","slot1Start","slot1End","slot1StartDate","startDate","slot1EndDate","endDate","slot1Days","days","slot2Id","slot2Start","slot2End","slot2StartDate","slot2EndDate","slot2Days","Swal","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","swapSlot","console","log","routeSegments","name","path","initialValues","validationSchema","onSubmit","errors","touched","setFieldValue","noValidate","classList","htmlFor","CustomSelect","Button","disabled","type","Spinner","size","variant","animation","to","React","forwardRef","_ref","ref","bsPrefix","children","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","bsSpinnerPrefix","useBootstrapPrefix","createElement","_extends","classNames","displayName"],"mappings":"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","file":"static/js/41.62b6c29e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Select from \"react-select\";\r\n\r\nexport default ({ onChange, options, value, className }) => {\r\n  const defaultValue = (options, value) => {\r\n    return options ? options.find((option) => option.value === value) : \"\";\r\n  };\r\n\r\n  return (\r\n    <div className={className}>\r\n      <Select\r\n        value={defaultValue(options, value)}\r\n        onChange={(value) => {\r\n          onChange(value);\r\n        }}\r\n        options={options}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext, Fragment, useState } from \"react\";\r\nimport { Breadcrumb } from \"@gull\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\nimport AppContext from \"app/appContext\";\r\nimport api from \"app/api/api\";\r\nimport * as yup from \"yup\";\r\nimport { classList } from \"@utils\";\r\nimport CustomSelect from \"./CustomSelect\";\r\nimport { Button, Spinner } from \"react-bootstrap\";\r\nimport { swapSlot } from \"app/reducers/actions/ClassroomActions\";\r\nimport { nanoid } from \"nanoid\";\r\nimport Swal from \"sweetalert2\";\r\nconst basicFormSchema = yup.object().shape({\r\n  timeSlot: yup.string().required(\"Time Slot is required\"),\r\n});\r\nconst SwapSLot = () => {\r\n  const {\r\n    classrooms,\r\n    classroomSlots,\r\n    user,\r\n    teachers,\r\n    subjects,\r\n    dispatch,\r\n    token,\r\n  } = useContext(AppContext);\r\n  const { id } = useParams();\r\n  const [loading, setLoading] = useState();\r\n  const classroomSlot = classroomSlots.find(\r\n    (classroomSlot) => classroomSlot.id === id\r\n  );\r\n  const filteredSlots = classroomSlots.filter(\r\n    (slot) => slot.id !== id && slot.resourceId === classroomSlot.resourceId\r\n  );\r\n  const options = filteredSlots.map((slot) => {\r\n    return {\r\n      value: slot.id,\r\n      label: `${\r\n        classrooms.find((classroom) => classroom.id === slot.resourceId)\r\n          ? classrooms.find((classroom) => classroom.id === slot.resourceId)\r\n              .title\r\n          : \"No classroom found\"\r\n      } ${slot.startTime}-${slot.endTime} Teacher:${\r\n        teachers.find((teacher) => teacher.id === slot.teacher)\r\n          ? teachers.find((teacher) => teacher.id === slot.teacher).teacherName\r\n          : \"No Teacher Found\"\r\n      } Subject:${slot.subject.label} Course:${slot.course.label}`,\r\n    };\r\n  });\r\n  const handleSubmit = async (values) => {\r\n    const { timeSlot } = values;\r\n    const slot1 = classroomSlots.find(\r\n      (classroomSlot) => classroomSlot.id === timeSlot\r\n    );\r\n    const slot2 = classroomSlot;\r\n    const updatedValues = {\r\n      slot1Id: slot1.id,\r\n      slot1Start: slot2.startTime,\r\n      slot1End: slot2.endTime,\r\n      slot1StartDate: slot2.startDate,\r\n      slot1EndDate: slot2.endDate,\r\n      slot1Days: slot2.days,\r\n      slot2Id: slot2.id,\r\n      slot2Start: slot1.startTime,\r\n      slot2End: slot1.endTime,\r\n      slot2StartDate: slot1.startDate,\r\n      slot2EndDate: slot1.endDate,\r\n      slot2Days: slot1.days,\r\n    };\r\n\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes,Swap it!\",\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        try {\r\n          setLoading(true);\r\n          await swapSlot(updatedValues, token)(dispatch);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    });\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumb\r\n        routeSegments={[\r\n          { name: \"Occupied List\", path: \"/masterClass/list\" },\r\n          { name: \"Swap for slot\" },\r\n        ]}\r\n      />\r\n      <div className=\"card\">\r\n        <Formik\r\n          initialValues={{\r\n            timeSlot: \"\",\r\n          }}\r\n          validationSchema={basicFormSchema}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          {({ values, errors, touched, handleSubmit, setFieldValue }) => {\r\n            return (\r\n              <form\r\n                className=\"needs-validation\"\r\n                onSubmit={handleSubmit}\r\n                noValidate\r\n              >\r\n                <div className=\"card-body\">\r\n                  <div className=\"form-row\">\r\n                    <div\r\n                      className={classList({\r\n                        \"form-group col-md-6\": true,\r\n                        \"invalid-field\": errors.teacher && touched.teacher,\r\n                      })}\r\n                    >\r\n                      <label htmlFor=\"timeSlot\" className=\"ul-form__label\">\r\n                        Choose Time Slot:\r\n                      </label>\r\n                      <CustomSelect\r\n                        name=\"timeSlot\"\r\n                        options={options}\r\n                        onChange={(value) =>\r\n                          setFieldValue(\"timeSlot\", value.value)\r\n                        }\r\n                        value={values.timeSlot}\r\n                        required\r\n                      />\r\n                      <div className=\"invalid-feedback\">\r\n                        Time Slot is required\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"custom-separator\"></div>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                  <div className=\"mc-footer\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-lg-12 \">\r\n                        <Button\r\n                          disabled={loading}\r\n                          className=\"btn btn-primary m-1\"\r\n                          type=\"submit\"\r\n                        >\r\n                          Submit\r\n                          {loading && (\r\n                            <Spinner\r\n                              size=\"sm\"\r\n                              variant=\"light\"\r\n                              className=\"mr-1\"\r\n                              animation=\"border\"\r\n                            />\r\n                          )}\r\n                        </Button>\r\n                        <Link to=\"/masterClass/list\">\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-outline-secondary m-1\"\r\n                          >\r\n                            Cancel\r\n                          </button>\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SwapSLot;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Spinner = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      animation = _ref.animation,\n      size = _ref.size,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"animation\", \"size\", \"children\", \"as\", \"className\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  var bsSpinnerPrefix = bsPrefix + \"-\" + animation;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsSpinnerPrefix, size && bsSpinnerPrefix + \"-\" + size, variant && \"text-\" + variant)\n  }), children);\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;"],"sourceRoot":""}