{"version":3,"sources":["app/views/dashboard/TopCard.js","app/views/dashboard/NewStudents.js","app/views/dashboard/NewTeachers.js","app/views/dashboard/StudentsChart.js","app/views/dashboard/Dashboard.js"],"names":["TopCard","students","classrooms","subjects","teachers","courses","classroomSlots","cardList","icon","title","length","subtitle","className","map","card","index","key","NewStudents","history","useHistory","filteredStudents","filter","student","format","created","Date","now","Dropdown","alignRight","Toggle","as","Menu","Item","onClick","push","id","scope","name","email","phone","gender","status","NewTeachers","filteredTeachers","teacher","teacherName","StudentsChart","options","label","value","optionsData","useState","selected","setSelected","selectData","setSelectData","getData","select","getName","console","log","minutesOption","chart","height","type","zoom","enabled","toolbar","show","tooltip","shared","followCursor","intersect","inverseOrder","custom","undefined","fillSeriesColor","theme","dataLabels","stroke","curve","series","data","groupedData","item","filterByMinutes","sort","a","b","forEach","minutes","Object","entries","x","y","groupDataByMinutes","grid","row","colors","opacity","xaxis","hoursOptions","filterByHours","hours","groupDataByHours","daysOptions","filterByDays","day","groupDataByDay","monthOptions","filterBy30Days","groupDataByMonth","SimpleCard","onChange","selectedOptions","Dashboard","useContext","AppContext","routeSegments","path"],"mappings":"6IA8DeA,EA5DC,SAAC,GAOV,IANLC,EAMI,EANJA,SACAC,EAKI,EALJA,WACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,SAEAC,GACI,EAFJC,eAEI,EADJD,SAEME,EAAW,CACf,CACEC,KAAM,kBACNC,MAAOR,EAASS,OAChBC,SAAU,YAEZ,CACEH,KAAM,kBACNC,MAAOL,EAASM,OAChBC,SAAU,YAEZ,CACEH,KAAM,SACNC,MAAON,EAASO,OAChBC,SAAU,YAEZ,CACEH,KAAM,eACNC,MAAOJ,EAAQK,OACfC,SAAU,WAEZ,CACEH,KAAM,gBACNC,MAAOP,EAAWQ,OAClBC,SAAU,eAGd,OACE,6BACE,yBAAKC,UAAU,OACZL,EAASM,KAAI,SAACC,EAAMC,GAAP,OACZ,yBAAKC,IAAKD,EAAOH,UAAU,8BACzB,yBAAKA,UAAU,wDACb,yBAAKA,UAAU,yBACb,uBAAGA,UAAWE,EAAKN,OACnB,yBAAKI,UAAU,WACb,uBAAGA,UAAU,wCACVE,EAAKH,UAER,uBAAGC,UAAU,kDACVE,EAAKL,iB,2CCsCXQ,EApFK,SAAC,GAAkB,IAAhBhB,EAAe,EAAfA,SACfiB,EAAUC,cACVC,EAAmBnB,EAASoB,QAChC,SAACC,GAAD,OACEC,kBAAOD,EAAQE,QAAS,gBAAkBD,kBAAOE,KAAKC,MAAO,iBASjE,OACE,yBAAKd,UAAU,OACZX,GAAYmB,GACX,yBAAKR,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,0FACb,wBAAIA,UAAU,kCAAd,gBACA,kBAACe,EAAA,EAAD,CAAUC,YAAU,GAClB,kBAACD,EAAA,EAASE,OAAV,CACEC,GAAG,OACHlB,UAAU,gCAEV,uBAAGA,UAAU,uBAEf,kBAACe,EAAA,EAASI,KAAV,KACE,kBAACJ,EAAA,EAASK,KAAV,CAAeC,QArBb,WAChBf,EAAQgB,KAAK,2BAoBC,mBAGA,kBAACP,EAAA,EAASK,KAAV,CAAeC,QArBZ,WACjBf,EAAQgB,KAAK,4BAoBC,wBAON,yBAAKtB,UAAU,IACb,yBAAKA,UAAU,oBACb,2BAAOuB,GAAG,aAAavB,UAAU,sBAC/B,+BACE,4BACE,wBAAIwB,MAAM,OAAV,KACA,wBAAIA,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,UACA,wBAAIA,MAAM,OAAV,YAGJ,+BACGhB,EAAiBP,KAAI,SAACS,EAASP,GAAV,OACpB,wBAAIC,IAAKD,GACP,wBAAIqB,MAAM,OAAOrB,EAAQ,GACzB,4BAAKO,EAAQe,MACb,4BAAKf,EAAQgB,OACb,4BAAKhB,EAAQiB,OACb,4BAAKjB,EAAQkB,QACb,4BACG,IACD,0BACE5B,UAAS,2BACY,YAAnBU,EAAQmB,OACJ,gBACA,iBAGLnB,EAAQmB,qBCEtBC,EAtEK,SAAC,GAAkB,IAAhBtC,EAAe,EAAfA,SACfuC,EAAmBvC,EAASiB,QAChC,SAACuB,GAAD,OACErB,kBAAOqB,EAAQpB,QAAS,gBAAkBD,kBAAOE,KAAKC,MAAO,iBAE3DR,EAAUC,cAOhB,OACE,yBAAKP,UAAU,OACZR,GAAYuC,GACX,yBAAK/B,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,0FACb,wBAAIA,UAAU,kCAAd,gBACA,kBAACe,EAAA,EAAD,CAAUC,YAAU,GAClB,kBAACD,EAAA,EAASE,OAAV,CACEC,GAAG,OACHlB,UAAU,gCAEV,uBAAGA,UAAU,uBAEf,kBAACe,EAAA,EAASI,KAAV,KACE,kBAACJ,EAAA,EAASK,KAAV,CAAeC,QArBb,WAChBf,EAAQgB,KAAK,2BAoBC,mBAGA,kBAACP,EAAA,EAASK,KAAV,CAAeC,QArBZ,WACjBf,EAAQgB,KAAK,4BAoBC,wBAON,yBAAKtB,UAAU,IACb,yBAAKA,UAAU,oBACb,2BAAOuB,GAAG,aAAavB,UAAU,sBAC/B,+BACE,4BACE,wBAAIwB,MAAM,OAAV,KACA,wBAAIA,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,YAGJ,+BACGO,EAAiB9B,KAAI,SAAC+B,EAAS7B,GAAV,OACpB,wBAAIC,IAAKD,GACP,wBAAIqB,MAAM,OAAOrB,EAAQ,GACzB,4BAAK6B,EAAQC,aACb,4BAAKD,EAAQN,OACb,4BAAKM,EAAQL,OACb,4BAAKK,EAAQJ,oB,6CCyXtBM,G,kDAvaO,SAAC,GAOhB,IANL7C,EAMI,EANJA,SACAG,EAKI,EALJA,SACAF,EAII,EAJJA,WACAC,EAGI,EAHJA,SACAE,EAEI,EAFJA,QACAC,EACI,EADJA,eAEMyC,EAAU,CACd,CAAEC,MAAO,kBAAmBC,MAAO,WACnC,CAAED,MAAO,gBAAiBC,MAAO,SACjC,CAAED,MAAO,cAAeC,MAAO,QAC/B,CAAED,MAAO,eAAgBC,MAAO,UAE5BC,EAAc,CAClB,CAAEF,MAAO,WAAYC,MAAOhD,GAC5B,CAAE+C,MAAO,WAAYC,MAAO7C,GAC5B,CAAE4C,MAAO,WAAYC,MAAO9C,GAC5B,CAAE6C,MAAO,UAAWC,MAAO5C,GAC3B,CAAE2C,MAAO,aAAcC,MAAO/C,GAC9B,CAAE8C,MAAO,kBAAmBC,MAAO3C,IAbjC,EAe4B6C,mBAASJ,EAAQ,IAf7C,mBAeGK,EAfH,KAeaC,EAfb,OAgBgCF,mBAASD,EAAY,IAhBrD,mBAgBGI,EAhBH,KAgBeC,EAhBf,KAkBEC,EAAU,SAACC,GACf,MAAqB,aAAjBA,EAAOT,MACF/C,EAEY,aAAjBwD,EAAOT,MACF5C,EAEY,aAAjBqD,EAAOT,MACF7C,EAEY,YAAjBsD,EAAOT,MACF3C,EAEY,eAAjBoD,EAAOT,MACF9C,EAEY,oBAAjBuD,EAAOT,MACF1C,OADT,GAIIoD,EAAU,SAACD,GACf,MAAqB,aAAjBA,EAAOT,MACF,WAEY,aAAjBS,EAAOT,MACF,WAEY,aAAjBS,EAAOT,MACF,WAEY,YAAjBS,EAAOT,MACF,UAEY,eAAjBS,EAAOT,MACF,aAEY,oBAAjBS,EAAOT,MACF,sBADT,GAIFW,QAAQC,IAAIN,GAsIZ,IAAMO,EAAgB,CACpBC,MAAO,CACLC,OAAQ,GACRC,KAAM,OACNC,KAAM,CACJC,SAAS,GAEXC,QAAS,CACPC,MAAM,IAGVC,QAAS,CACPH,SAAS,EACTI,QAAQ,EACRC,cAAc,EACdC,WAAW,EACXC,cAAc,EACdC,YAAQC,EACRC,iBAAiB,EACjBC,OAAO,GAETC,WAAY,CACVZ,SAAS,GAEXa,OAAQ,CACNC,MAAO,UAETC,OAAQ,CACN,CACE5C,KAAMqB,EAAQJ,GACd4B,KAnGN,SAA4BA,GAC1B,IAAIC,EAAc,GAYlB,OA5DsB,SAACD,GAKvB,OAJiBA,EAAK7D,QAAO,SAAC+D,GAC5B,IAAM1D,EAAMD,KAAKC,MACjB,OAAO0D,EAAK5D,QAAUE,EAAM,QA8C9B2D,CAAgBH,GACbI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE/D,QAAUgE,EAAEhE,WAC7BiE,SAAQ,SAACL,GACR,IAAMM,EAAUnE,kBAAO,IAAIE,KAAK2D,EAAK5D,SAAU,WAC3C2D,EAAYO,GACdP,EAAYO,KAEZP,EAAYO,GAAW,KAItBC,OAAOC,QAAQT,GAAatE,KAAI,yCAAuB,CAC5DgF,EADqC,KAErCC,EAFqC,SAsF7BC,CAAmBvC,EAAQF,MAIrC0C,KAAM,CACJC,IAAK,CACHC,OAAQ,CAAC,UAAW,eACpBC,QAAS,KAGbC,MAAO,IAEHC,EAAe,CACnBvC,MAAO,CACLC,OAAQ,GACRC,KAAM,OACNC,KAAM,CACJC,SAAS,GAEXC,QAAS,CACPC,MAAM,IAGVC,QAAS,CACPH,SAAS,EACTI,QAAQ,EACRC,cAAc,EACdC,WAAW,EACXC,cAAc,EACdC,YAAQC,EACRC,iBAAiB,EACjBC,OAAO,GAETC,WAAY,CACVZ,SAAS,GAEXa,OAAQ,CACNC,MAAO,UAETC,OAAQ,CACN,CACE5C,KAAMqB,EAAQJ,GACd4B,KA3HN,SAA0BA,GACxB,IAAIC,EAAc,GAWlB,OAnCoB,SAACD,GAAD,OACpBA,EAAK7D,QAAO,SAAC+D,GACX,IAAM1D,EAAMD,KAAKC,MACjB,OAAO0D,EAAK5D,QAAUE,EAAM,SAsB9B4E,CAAcpB,GACXI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE/D,QAAUgE,EAAEhE,WAC7BiE,SAAQ,SAACL,GACR,IAAMmB,EAAQhF,kBAAO,IAAIE,KAAK2D,EAAK5D,SAAU,WACzC2D,EAAYoB,GACdpB,EAAYoB,KAEZpB,EAAYoB,GAAS,KAGpBZ,OAAOC,QAAQT,GAAatE,KAAI,yCAAqB,CAC1DgF,EADqC,KAErCC,EAFqC,SA+G7BU,CAAiBhD,EAAQF,MAInC0C,KAAM,CACJC,IAAK,CACHC,OAAQ,CAAC,UAAW,eACpBC,QAAS,KAGbC,MAAO,IAIHK,EAAc,CAClB3C,MAAO,CACLC,OAAQ,GACRC,KAAM,OACNC,KAAM,CACJC,SAAS,GAEXC,QAAS,CACPC,MAAM,IAGVC,QAAS,CACPH,SAAS,EACTI,QAAQ,EACRC,cAAc,EACdC,WAAW,EACXC,cAAc,EACdC,YAAQC,EACRC,iBAAiB,EACjBC,OAAO,GAETC,WAAY,CACVZ,SAAS,GAEXa,OAAQ,CACNC,MAAO,UAETC,OAAQ,CACN,CACE5C,KAAMqB,EAAQJ,GACd4B,KAtJN,SAAwBA,GACtB,IAAIC,EAAc,GAWlB,OAnGmB,SAACD,GAAD,OACnBA,EAAK7D,QAAO,SAAC+D,GACX,IAAM1D,EAAMD,KAAKC,MACjB,OAAO0D,EAAK5D,QAAUE,EAAM,UAsF9BgF,CAAaxB,GACVI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE/D,QAAUgE,EAAEhE,WAC7BiE,SAAQ,SAACL,GACR,IAAMuB,EAAMpF,kBAAO,IAAIE,KAAK2D,EAAK5D,SAAU,QACvC2D,EAAYwB,GACdxB,EAAYwB,KAEZxB,EAAYwB,GAAO,KAGlBhB,OAAOC,QAAQT,GAAatE,KAAI,yCAAmB,CACxDgF,EADqC,KAErCC,EAFqC,SA0I7Bc,CAAepD,EAAQF,MAIjC0C,KAAM,CACJC,IAAK,CACHC,OAAQ,CAAC,UAAW,eACpBC,QAAS,KAGbC,MAAO,IAIHS,EAAe,CACnB/C,MAAO,CACLC,OAAQ,GACRC,KAAM,OACNC,KAAM,CACJC,SAAS,GAEXC,QAAS,CACPC,MAAM,IAGVC,QAAS,CACPH,SAAS,EACTI,QAAQ,EACRC,cAAc,EACdC,WAAW,EACXC,cAAc,EACdC,YAAQC,EACRC,iBAAiB,EACjBC,OAAO,GAETC,WAAY,CACVZ,SAAS,GAEXa,OAAQ,CACNC,MAAO,UAETC,OAAQ,CACN,CACE5C,KAAMqB,EAAQJ,GACd4B,KAjLN,SAA0BA,GACxB,IAAIC,EAAc,GAWlB,OAzHqB,SAACD,GAAD,OACrBA,EAAK7D,QAAO,SAAC+D,GACX,IAAM1D,EAAMD,KAAKC,MACjB,OAAO0D,EAAK5D,QAAUE,EAAM,UA4G9BoF,CAAe5B,GACZI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE/D,QAAUgE,EAAEhE,WAC7BiE,SAAQ,SAACL,GACR,IAAMuB,EAAMpF,kBAAO,IAAIE,KAAK2D,EAAK5D,SAAU,UACvC2D,EAAYwB,GACdxB,EAAYwB,KAEZxB,EAAYwB,GAAO,KAGlBhB,OAAOC,QAAQT,GAAatE,KAAI,yCAAmB,CACxDgF,EADqC,KAErCC,EAFqC,SAqK7BiB,CAAiBvD,EAAQF,MAInC0C,KAAM,CACJC,IAAK,CACHC,OAAQ,CAAC,UAAW,eACpBC,QAAS,KAGbC,MAAO,IAIT,OACE,kBAACY,EAAA,EAAD,CAAYpG,UAAU,QACpB,yBAAKA,UAAU,sCACb,wBAAIA,UAAU,QAAd,6BACA,kBAAC,IAAD,CACEA,UAAU,OACVmC,QAASG,EACT+D,SAvTiB,SAACC,GACxB3D,EAAc2D,IAuTRjE,MAAOK,IAET,kBAAC,IAAD,CACE1C,UAAU,OACVmC,QAASA,EACTkE,SAhUa,SAACC,GACpB7D,EAAY6D,IAgUNjE,MAAOG,KAIS,YAAnBA,EAASH,OACR,kBAAC,IAAD,CACEF,QAASc,EACToB,OAAQpB,EAAcoB,OACtBjB,KAAMH,EAAcC,MAAME,OAGV,UAAnBZ,EAASH,OACR,kBAAC,IAAD,CACEF,QAASsD,EACTpB,OAAQoB,EAAapB,OACrBjB,KAAMqC,EAAavC,MAAME,OAGT,SAAnBZ,EAASH,OACR,kBAAC,IAAD,CACEF,QAAS0D,EACTxB,OAAQwB,EAAYxB,OACpBjB,KAAMyC,EAAY3C,MAAME,OAGR,UAAnBZ,EAASH,OACR,kBAAC,IAAD,CACEF,QAAS8D,EACT5B,OAAQ4B,EAAa5B,OACrBjB,KAAM6C,EAAa/C,MAAME,UCrXpBmD,UAhDG,WAAO,IAAD,EAEpBC,qBAAWC,KADLnH,EADc,EACdA,WAAYD,EADE,EACFA,SAAUG,EADR,EACQA,SAAUD,EADlB,EACkBA,SAAUE,EAD5B,EAC4BA,QAASC,EADrC,EACqCA,eAG3D,OACE,6BACE,kBAAC,IAAD,CAAYgH,cAAe,CAAC,CAAEjF,KAAM,YAAakF,KAAM,iBACtDrH,GACCD,GACAG,GACAD,GACAE,GACAC,GACE,6BACE,kBAAC,EAAD,CACEJ,WAAYA,EACZD,SAAUA,EACVG,SAAUA,EACVD,SAAUA,EACVE,QAASA,EACTC,eAAgBA,IAElB,yBAAKM,UAAU,YACb,yBAAKA,UAAU,YACb,kBAAC,EAAD,CAAaX,SAAUA,KAEzB,yBAAKW,UAAU,YACb,kBAAC,EAAD,CAAaR,SAAUA,MAG3B,yBAAKQ,UAAU,OACb,yBAAKA,UAAU,uBACb,kBAAC,EAAD,CACEV,WAAYA,EACZC,SAAUA,EACVE,QAASA,EACTD,SAAUA,EACVE,eAAgBA,EAChBL,SAAUA","file":"static/js/43.86f8f164.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst TopCard = ({\r\n  students,\r\n  classrooms,\r\n  subjects,\r\n  teachers,\r\n  classroomSlots,\r\n  courses,\r\n}) => {\r\n  const cardList = [\r\n    {\r\n      icon: \"i-Student-Hat-2\",\r\n      title: students.length,\r\n      subtitle: \"Students\",\r\n    },\r\n    {\r\n      icon: \"i-Administrator\",\r\n      title: teachers.length,\r\n      subtitle: \"Teachers\",\r\n    },\r\n    {\r\n      icon: \"i-Book\",\r\n      title: subjects.length,\r\n      subtitle: \"Subjects\",\r\n    },\r\n    {\r\n      icon: \"i-Management\",\r\n      title: courses.length,\r\n      subtitle: \"Courses\",\r\n    },\r\n    {\r\n      icon: \"i-University1\",\r\n      title: classrooms.length,\r\n      subtitle: \"Classrooms\",\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        {cardList.map((card, index) => (\r\n          <div key={index} className=\"col-lg-2 col-md-6 col-sm-6\">\r\n            <div className=\"card card-icon-bg card-icon-bg-primary o-hidden mb-4\">\r\n              <div className=\"card-body text-center\">\r\n                <i className={card.icon}></i>\r\n                <div className=\"content\">\r\n                  <p className=\"text-muted mt-2 mb-0 text-capitalize\">\r\n                    {card.subtitle}\r\n                  </p>\r\n                  <p className=\"lead text-primary text-24 mb-2 text-capitalize\">\r\n                    {card.title}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopCard;\r\n","import React from \"react\";\r\nimport { format } from \"date-fns/\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst NewStudents = ({ students }) => {\r\n  const history = useHistory();\r\n  const filteredStudents = students.filter(\r\n    (student) =>\r\n      format(student.created, \"MM/dd/yyyy\") === format(Date.now(), \"MM/dd/yyyy\")\r\n  );\r\n\r\n  const handleAdd = () => {\r\n    history.push(\"/students/add-student\");\r\n  };\r\n  const handleView = () => {\r\n    history.push(\"/students/studentslist\");\r\n  };\r\n  return (\r\n    <div className=\"row\">\r\n      {students && filteredStudents && (\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card mb-4\">\r\n            <div className=\"card-header card-title mb-0 d-flex align-items-center justify-content-between border-0\">\r\n              <h3 className=\"w-50 float-left card-title m-0\">New Students</h3>\r\n              <Dropdown alignRight>\r\n                <Dropdown.Toggle\r\n                  as=\"span\"\r\n                  className=\"toggle-hidden cursor-pointer\"\r\n                >\r\n                  <i className=\"nav-icon i-Gear-2\"></i>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item onClick={handleAdd}>\r\n                    Add new student\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item onClick={handleView}>\r\n                    View all students\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </div>\r\n\r\n            <div className=\"\">\r\n              <div className=\"table-responsive\">\r\n                <table id=\"user_table\" className=\"table  text-center\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">#</th>\r\n                      <th scope=\"col\">Name</th>\r\n                      <th scope=\"col\">Email</th>\r\n                      <th scope=\"col\">Phone</th>\r\n                      <th scope=\"col\">Gender</th>\r\n                      <th scope=\"col\">Status</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {filteredStudents.map((student, index) => (\r\n                      <tr key={index}>\r\n                        <th scope=\"row\">{index + 1}</th>\r\n                        <td>{student.name}</td>\r\n                        <td>{student.email}</td>\r\n                        <td>{student.phone}</td>\r\n                        <td>{student.gender}</td>\r\n                        <td>\r\n                          {\" \"}\r\n                          <span\r\n                            className={`badge badge-pill ${\r\n                              student.status === \"Regular\"\r\n                                ? \"badge-success\"\r\n                                : \"badge-danger\"\r\n                            }`}\r\n                          >\r\n                            {student.status}\r\n                          </span>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewStudents;\r\n","import React from \"react\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { format } from \"date-fns\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst NewTeachers = ({ teachers }) => {\r\n  const filteredTeachers = teachers.filter(\r\n    (teacher) =>\r\n      format(teacher.created, \"MM/dd/yyyy\") === format(Date.now(), \"MM/dd/yyyy\")\r\n  );\r\n  const history = useHistory();\r\n  const handleAdd = () => {\r\n    history.push(\"/teachers/add-teacher\");\r\n  };\r\n  const handleView = () => {\r\n    history.push(\"/teachers/teachersList\");\r\n  };\r\n  return (\r\n    <div className=\"row\">\r\n      {teachers && filteredTeachers && (\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card mb-4\">\r\n            <div className=\"card-header card-title mb-0 d-flex align-items-center justify-content-between border-0\">\r\n              <h3 className=\"w-50 float-left card-title m-0\">New Teachers</h3>\r\n              <Dropdown alignRight>\r\n                <Dropdown.Toggle\r\n                  as=\"span\"\r\n                  className=\"toggle-hidden cursor-pointer\"\r\n                >\r\n                  <i className=\"nav-icon i-Gear-2\"></i>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item onClick={handleAdd}>\r\n                    Add new teacher\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item onClick={handleView}>\r\n                    View all teachers\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </div>\r\n\r\n            <div className=\"\">\r\n              <div className=\"table-responsive\">\r\n                <table id=\"user_table\" className=\"table  text-center\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">#</th>\r\n                      <th scope=\"col\">Name</th>\r\n                      <th scope=\"col\">Email</th>\r\n                      <th scope=\"col\">Phone</th>\r\n                      <th scope=\"col\">Gender</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {filteredTeachers.map((teacher, index) => (\r\n                      <tr key={index}>\r\n                        <th scope=\"row\">{index + 1}</th>\r\n                        <td>{teacher.teacherName}</td>\r\n                        <td>{teacher.email}</td>\r\n                        <td>{teacher.phone}</td>\r\n                        <td>{teacher.gender}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewTeachers;\r\n","import React, { useState } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport SimpleCard from \"@gull/components/cards/SimpleCard\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  isBefore,\r\n  setHours,\r\n  setMinutes,\r\n  setSeconds,\r\n  addMinutes,\r\n  startOfHour,\r\n  setMilliseconds,\r\n  format,\r\n} from \"date-fns\";\r\nconst StudentsChart = ({\r\n  students,\r\n  teachers,\r\n  classrooms,\r\n  subjects,\r\n  courses,\r\n  classroomSlots,\r\n}) => {\r\n  const options = [\r\n    { label: \"Last 60 minutes\", value: \"minutes\" },\r\n    { label: \"Last 24 hours\", value: \"hours\" },\r\n    { label: \"Last 7 days\", value: \"days\" },\r\n    { label: \"Last 30 days\", value: \"month\" },\r\n  ];\r\n  const optionsData = [\r\n    { label: \"Students\", value: students },\r\n    { label: \"Teachers\", value: teachers },\r\n    { label: \"Subjects\", value: subjects },\r\n    { label: \"Courses\", value: courses },\r\n    { label: \"Classrooms\", value: classrooms },\r\n    { label: \"Classroom Slots\", value: classroomSlots },\r\n  ];\r\n  const [selected, setSelected] = useState(options[0]);\r\n  const [selectData, setSelectData] = useState(optionsData[0]);\r\n\r\n  const getData = (select) => {\r\n    if (select.label === \"Students\") {\r\n      return students;\r\n    }\r\n    if (select.label === \"Teachers\") {\r\n      return teachers;\r\n    }\r\n    if (select.label === \"Subjects\") {\r\n      return subjects;\r\n    }\r\n    if (select.label === \"Courses\") {\r\n      return courses;\r\n    }\r\n    if (select.label === \"Classrooms\") {\r\n      return classrooms;\r\n    }\r\n    if (select.label === \"Classroom Slots\") {\r\n      return classroomSlots;\r\n    }\r\n  };\r\n  const getName = (select) => {\r\n    if (select.label === \"Students\") {\r\n      return \"Students\";\r\n    }\r\n    if (select.label === \"Teachers\") {\r\n      return \"Teachers\";\r\n    }\r\n    if (select.label === \"Subjects\") {\r\n      return \"Subjects\";\r\n    }\r\n    if (select.label === \"Courses\") {\r\n      return \"Courses\";\r\n    }\r\n    if (select.label === \"Classrooms\") {\r\n      return \"Classrooms\";\r\n    }\r\n    if (select.label === \"Classroom Slots\") {\r\n      return \"ClassroomSlots\";\r\n    }\r\n  };\r\n  console.log(selectData);\r\n  const handleChange = (selectedOptions) => {\r\n    setSelected(selectedOptions);\r\n  };\r\n  const handleChangeData = (selectedOptions) => {\r\n    setSelectData(selectedOptions);\r\n  };\r\n\r\n  const filterBy30Days = (data) =>\r\n    data.filter((item) => {\r\n      const now = Date.now();\r\n      return item.created > now - 30 * 24 * 60 * 60 * 1000;\r\n    });\r\n  const filterByDays = (data) =>\r\n    data.filter((item) => {\r\n      const now = Date.now();\r\n      return item.created > now - 7 * 24 * 60 * 60 * 1000;\r\n    });\r\n  const filterByMinutes = (data) => {\r\n    const filtered = data.filter((item) => {\r\n      const now = Date.now();\r\n      return item.created > now - 60 * 60 * 1000;\r\n    });\r\n    return filtered;\r\n  };\r\n\r\n  const getMinutes = () => {\r\n    const interval = 15;\r\n    const currentDate = new Date();\r\n    const sixtyMinutesAgo = addMinutes(currentDate, -60);\r\n\r\n    const start = startOfHour(sixtyMinutesAgo);\r\n    const end = startOfHour(currentDate);\r\n\r\n    const hoursWithIntervals = [];\r\n    for (let i = start; i <= end; i = addMinutes(i, interval)) {\r\n      hoursWithIntervals.push(format(i, \"h:mm a\"));\r\n    }\r\n    return hoursWithIntervals;\r\n  };\r\n\r\n  const generateTime = (startTime, endTime) => {\r\n    const setTime = (x, h = 0, m = 0, s = 0, ms = 0) =>\r\n      setHours(setMinutes(setSeconds(setMilliseconds(x, ms), s), m), h);\r\n    const from = setTime(new Date(), startTime);\r\n    const to = setTime(new Date(), endTime + 1);\r\n    const step = (x) => addMinutes(x, 60);\r\n\r\n    let blocks = [];\r\n    let cursor = from;\r\n\r\n    while (isBefore(cursor, to)) {\r\n      blocks.push(format(cursor, \"h:mm a\"));\r\n\r\n      cursor = step(cursor);\r\n    }\r\n\r\n    return blocks;\r\n  };\r\n\r\n  const filterByHours = (data) =>\r\n    data.filter((item) => {\r\n      const now = Date.now();\r\n      return item.created > now - 24 * 60 * 60 * 1000;\r\n    });\r\n  function groupDataByMinutes(data) {\r\n    let groupedData = {};\r\n    filterByMinutes(data)\r\n      .sort((a, b) => a.created - b.created)\r\n      .forEach((item) => {\r\n        const minutes = format(new Date(item.created), \"hh:mm a\");\r\n        if (groupedData[minutes]) {\r\n          groupedData[minutes]++;\r\n        } else {\r\n          groupedData[minutes] = 1;\r\n        }\r\n      });\r\n\r\n    return Object.entries(groupedData).map(([minutes, count]) => ({\r\n      x: minutes,\r\n      y: count,\r\n    }));\r\n  }\r\n  function groupDataByHours(data) {\r\n    let groupedData = {};\r\n    filterByHours(data)\r\n      .sort((a, b) => a.created - b.created)\r\n      .forEach((item) => {\r\n        const hours = format(new Date(item.created), \"hh:00 a\");\r\n        if (groupedData[hours]) {\r\n          groupedData[hours]++;\r\n        } else {\r\n          groupedData[hours] = 1;\r\n        }\r\n      });\r\n    return Object.entries(groupedData).map(([hours, count]) => ({\r\n      x: hours,\r\n      y: count,\r\n    }));\r\n  }\r\n  function groupDataByDay(data) {\r\n    let groupedData = {};\r\n    filterByDays(data)\r\n      .sort((a, b) => a.created - b.created)\r\n      .forEach((item) => {\r\n        const day = format(new Date(item.created), \"EEEE\");\r\n        if (groupedData[day]) {\r\n          groupedData[day]++;\r\n        } else {\r\n          groupedData[day] = 1;\r\n        }\r\n      });\r\n    return Object.entries(groupedData).map(([day, count]) => ({\r\n      x: day,\r\n      y: count,\r\n    }));\r\n  }\r\n  function groupDataByMonth(data) {\r\n    let groupedData = {};\r\n    filterBy30Days(data)\r\n      .sort((a, b) => a.created - b.created)\r\n      .forEach((item) => {\r\n        const day = format(new Date(item.created), \"MMM/dd\");\r\n        if (groupedData[day]) {\r\n          groupedData[day]++;\r\n        } else {\r\n          groupedData[day] = 1;\r\n        }\r\n      });\r\n    return Object.entries(groupedData).map(([day, count]) => ({\r\n      x: day,\r\n      y: count,\r\n    }));\r\n  }\r\n  const minutesOption = {\r\n    chart: {\r\n      height: 80,\r\n      type: \"line\",\r\n      zoom: {\r\n        enabled: false,\r\n      },\r\n      toolbar: {\r\n        show: true,\r\n      },\r\n    },\r\n    tooltip: {\r\n      enabled: true,\r\n      shared: true,\r\n      followCursor: false,\r\n      intersect: false,\r\n      inverseOrder: false,\r\n      custom: undefined,\r\n      fillSeriesColor: false,\r\n      theme: false,\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    stroke: {\r\n      curve: \"smooth\",\r\n    },\r\n    series: [\r\n      {\r\n        name: getName(selectData),\r\n        data: groupDataByMinutes(getData(selectData)),\r\n      },\r\n    ],\r\n\r\n    grid: {\r\n      row: {\r\n        colors: [\"#f3f3f3\", \"transparent\"],\r\n        opacity: 0.5,\r\n      },\r\n    },\r\n    xaxis: {},\r\n  };\r\n  const hoursOptions = {\r\n    chart: {\r\n      height: 80,\r\n      type: \"line\",\r\n      zoom: {\r\n        enabled: false,\r\n      },\r\n      toolbar: {\r\n        show: true,\r\n      },\r\n    },\r\n    tooltip: {\r\n      enabled: true,\r\n      shared: true,\r\n      followCursor: false,\r\n      intersect: false,\r\n      inverseOrder: false,\r\n      custom: undefined,\r\n      fillSeriesColor: false,\r\n      theme: false,\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    stroke: {\r\n      curve: \"smooth\",\r\n    },\r\n    series: [\r\n      {\r\n        name: getName(selectData),\r\n        data: groupDataByHours(getData(selectData)),\r\n      },\r\n    ],\r\n\r\n    grid: {\r\n      row: {\r\n        colors: [\"#f3f3f3\", \"transparent\"],\r\n        opacity: 0.5,\r\n      },\r\n    },\r\n    xaxis: {\r\n      // categories: getMinutes(),\r\n    },\r\n  };\r\n  const daysOptions = {\r\n    chart: {\r\n      height: 80,\r\n      type: \"line\",\r\n      zoom: {\r\n        enabled: false,\r\n      },\r\n      toolbar: {\r\n        show: true,\r\n      },\r\n    },\r\n    tooltip: {\r\n      enabled: true,\r\n      shared: true,\r\n      followCursor: false,\r\n      intersect: false,\r\n      inverseOrder: false,\r\n      custom: undefined,\r\n      fillSeriesColor: false,\r\n      theme: false,\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    stroke: {\r\n      curve: \"smooth\",\r\n    },\r\n    series: [\r\n      {\r\n        name: getName(selectData),\r\n        data: groupDataByDay(getData(selectData)),\r\n      },\r\n    ],\r\n\r\n    grid: {\r\n      row: {\r\n        colors: [\"#f3f3f3\", \"transparent\"],\r\n        opacity: 0.5,\r\n      },\r\n    },\r\n    xaxis: {\r\n      // categories: getMinutes(),\r\n    },\r\n  };\r\n  const monthOptions = {\r\n    chart: {\r\n      height: 80,\r\n      type: \"line\",\r\n      zoom: {\r\n        enabled: false,\r\n      },\r\n      toolbar: {\r\n        show: true,\r\n      },\r\n    },\r\n    tooltip: {\r\n      enabled: true,\r\n      shared: true,\r\n      followCursor: false,\r\n      intersect: false,\r\n      inverseOrder: false,\r\n      custom: undefined,\r\n      fillSeriesColor: false,\r\n      theme: false,\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    stroke: {\r\n      curve: \"smooth\",\r\n    },\r\n    series: [\r\n      {\r\n        name: getName(selectData),\r\n        data: groupDataByMonth(getData(selectData)),\r\n      },\r\n    ],\r\n\r\n    grid: {\r\n      row: {\r\n        colors: [\"#f3f3f3\", \"transparent\"],\r\n        opacity: 0.5,\r\n      },\r\n    },\r\n    xaxis: {\r\n      // categories: getMinutes(),\r\n    },\r\n  };\r\n  return (\r\n    <SimpleCard className=\"mb-4\">\r\n      <div className=\"d-flex flex-row align-items-center\">\r\n        <h3 className=\"mr-2\">Numbers of recently added</h3>\r\n        <Select\r\n          className=\"mr-2\"\r\n          options={optionsData}\r\n          onChange={handleChangeData}\r\n          value={selectData}\r\n        />\r\n        <Select\r\n          className=\"mr-2\"\r\n          options={options}\r\n          onChange={handleChange}\r\n          value={selected}\r\n        />\r\n      </div>\r\n\r\n      {selected.value === \"minutes\" && (\r\n        <Chart\r\n          options={minutesOption}\r\n          series={minutesOption.series}\r\n          type={minutesOption.chart.type}\r\n        />\r\n      )}\r\n      {selected.value === \"hours\" && (\r\n        <Chart\r\n          options={hoursOptions}\r\n          series={hoursOptions.series}\r\n          type={hoursOptions.chart.type}\r\n        />\r\n      )}\r\n      {selected.value === \"days\" && (\r\n        <Chart\r\n          options={daysOptions}\r\n          series={daysOptions.series}\r\n          type={daysOptions.chart.type}\r\n        />\r\n      )}\r\n      {selected.value === \"month\" && (\r\n        <Chart\r\n          options={monthOptions}\r\n          series={monthOptions.series}\r\n          type={monthOptions.chart.type}\r\n        />\r\n      )}\r\n    </SimpleCard>\r\n  );\r\n};\r\n\r\nexport default StudentsChart;\r\n","import React, { useContext, useState } from \"react\";\r\nimport TopCard from \"./TopCard\";\r\nimport AppContext from \"app/appContext\";\r\nimport { Breadcrumb } from \"@gull\";\r\nimport NewStudents from \"./NewStudents\";\r\nimport NewTeachers from \"./NewTeachers\";\r\nimport StudentsChart from \"./StudentsChart\";\r\nimport SimpleCard from \"@gull/components/cards/SimpleCard\";\r\nimport Select from \"react-select\";\r\nconst Dashboard = () => {\r\n  const { classrooms, students, teachers, subjects, courses, classroomSlots } =\r\n    useContext(AppContext);\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrumb routeSegments={[{ name: \"Dashboard\", path: \"/dashboard\" }]} />\r\n      {classrooms &&\r\n        students &&\r\n        teachers &&\r\n        subjects &&\r\n        courses &&\r\n        classroomSlots && (\r\n          <div>\r\n            <TopCard\r\n              classrooms={classrooms}\r\n              students={students}\r\n              teachers={teachers}\r\n              subjects={subjects}\r\n              courses={courses}\r\n              classroomSlots={classroomSlots}\r\n            />\r\n            <div className=\"row mt-5\">\r\n              <div className=\"col-lg-6\">\r\n                <NewStudents students={students} />\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <NewTeachers teachers={teachers} />\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-12 col-md-12\">\r\n                <StudentsChart\r\n                  classrooms={classrooms}\r\n                  subjects={subjects}\r\n                  courses={courses}\r\n                  teachers={teachers}\r\n                  classroomSlots={classroomSlots}\r\n                  students={students}\r\n                ></StudentsChart>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"sourceRoot":""}