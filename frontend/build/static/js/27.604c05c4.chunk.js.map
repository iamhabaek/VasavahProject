{"version":3,"sources":["app/views/students/ListView.js","app/views/students/CardView.js","app/views/students/StudentsList.js","../node_modules/nanoid/index.browser.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/Container.js"],"names":["ListView","list","search","handleDelete","Container","Col","lg","md","sm","xs","className","map","head","idx","key","scope","length","filter","data","name","toLowerCase","includes","student","id","birthDate","address","course","yearLevel","gender","format","created","class","status","Dropdown","Toggle","Menu","to","Item","onClick","e","CardView","handleEdit","loading","backgroundColor","color","size","style","Date","phone","Button","variant","type","StudentsList","useContext","AppContext","students","dispatch","user","token","useState","setSearch","setLoading","cardView","setCardView","listView","setListView","history","useHistory","push","a","notifications","nanoid","now","email","isViewed","action","content","location","description","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","deleteStudent","console","log","routeSegments","path","placeholder","onChange","target","value","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","DEVICE_SIZES","React","forwardRef","_ref","ref","bsPrefix","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","spans","classes","forEach","brkPoint","span","offset","order","propValue","_propValue$span","infix","createElement","_extends","classNames","apply","concat","displayName","fluid","suffix","defaultProps"],"mappings":"kPA+GeA,EA3GE,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aAYhC,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAAIC,UAAU,QAC5C,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,sBACb,2BAAOA,UAAU,UACf,+BACE,wBAAIA,UAAU,6BAlBZ,CACd,OACA,aACA,UACA,SACA,aACA,SACA,aACA,SACA,WAUuBC,KAAI,SAACC,EAAMC,GAAP,OACX,wBAAIC,IAAKD,EAAKE,MAAM,MAAML,UAAU,yBACjCE,QAKQ,IAAhBX,EAAKe,QACJ,+BACGf,EACEgB,QAAO,SAACC,GAAD,MACK,KAAXhB,EACIgB,EACAA,EAAKC,KAAKC,cAAcC,SAASnB,MAEtCS,KAAI,SAACW,GAAD,OACH,wBACEZ,UAAU,8BACVI,IAAKQ,EAAQC,IAEb,wBAAIb,UAAU,YACZ,8BAAOY,EAAQH,OAEjB,wBAAIT,UAAU,YAAYY,EAAQE,WAClC,wBAAId,UAAU,YACZ,8BAAOY,EAAQG,UAEjB,wBAAIf,UAAU,YAAYY,EAAQI,QAClC,wBAAIhB,UAAU,YAAYY,EAAQK,WAClC,wBAAIjB,UAAU,YAAYY,EAAQM,QAClC,wBAAIlB,UAAU,YACX,IACAmB,kBAAOP,EAAQQ,QAAS,wBAE3B,wBAAIpB,UAAU,YACZ,0BACEqB,MAAK,2BACgB,YAAnBT,EAAQU,OACJ,gBACA,iBAGLV,EAAQU,SAGb,wBAAItB,UAAU,YACZ,kBAACuB,EAAA,EAAD,KACE,kBAACA,EAAA,EAASC,OAAV,CAAiBxB,UAAU,oEACzB,0BAAMA,UAAU,qCAChB,0BAAMA,UAAU,qCAChB,0BAAMA,UAAU,iCAElB,kBAACuB,EAAA,EAASE,KAAV,KACE,kBAAC,IAAD,CACEC,GAAE,yBAAoBd,EAAQC,IAC9Bb,UAAU,gCAFZ,QAMA,kBAACuB,EAAA,EAASI,KAAV,CACEC,QAAS,SAACC,GAAD,OACPpC,EAAamB,EAAQC,GAAID,EAAQH,OAEnCT,UAAU,gCAJZ,oBAiBH,IAAhBT,EAAKe,QACJ,yBAAKN,UAAU,qDACb,uBAAGA,UAAU,0BAAb,sB,kBC+BC8B,EAhIE,SAAC,GAAyD,IAAvDvC,EAAsD,EAAtDA,KAAMwC,EAAgD,EAAhDA,WAAYvC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,aAA4B,EAAduC,QAC1D,OACE,6BACE,kBAACtC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAAIC,UAAU,QAC5C,yBAAKA,UAAU,OACZT,EACEgB,QAAO,SAACC,GAAD,MACK,KAAXhB,EAAgBgB,EAAOA,EAAKC,KAAKC,cAAcC,SAASnB,MAEzDS,KAAI,SAACW,GAAD,OACH,yBACER,IAAKQ,EAAQC,GACbb,UAAU,sCAEV,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,YACb,yBACEA,UAAS,UACY,YAAnBY,EAAQU,OACJ,eACA,cAHG,oBAMT,gCAASV,EAAQU,UAIrB,yBAAKtB,UAAU,+BACb,kBAAC,IAAD,CACEiC,gBAAgB,UAChBC,MAAM,OACNC,KAAM,GACN1B,KAAMG,EAAQH,QAGlB,yBACE2B,MAAO,CAAEH,gBAAiB,WAC1BjC,UAAU,oBAEV,uBAAGA,UAAU,4CAAb,UAA4DY,EAAQH,QAEtE,yBAAKT,UAAU,wEACb,0BAAMA,UAAU,6BAAhB,eAGA,0BAAMA,UAAU,WACbmB,kBACC,IAAIkB,KAAKzB,EAAQQ,SACjB,wBAIN,yBAAKpB,UAAU,wEACb,0BAAMA,UAAU,iCAAhB,WAGA,0BAAMA,UAAU,WAAWY,EAAQI,SAErC,yBAAKhB,UAAU,wEACb,0BAAMA,UAAU,iCAAhB,eAGA,0BAAMA,UAAU,WAAWY,EAAQK,YAErC,yBAAKjB,UAAU,wEACb,0BAAMA,UAAU,iCAAhB,eAGA,0BAAMA,UAAU,WAAWY,EAAQE,YAErC,yBAAKd,UAAU,wEACb,0BAAMA,UAAU,iCAAhB,WAGA,0BAAMA,UAAU,WAAWY,EAAQM,SAErC,yBAAKlB,UAAU,wEACb,0BAAMA,UAAU,iCAAhB,YAGA,0BAAMA,UAAU,WAAWY,EAAQG,UAGrC,yBAAKf,UAAU,wEACb,0BAAMA,UAAU,iCAAhB,UAGA,0BAAMA,UAAU,WAAWY,EAAQ0B,QAGrC,yBAAKtC,UAAU,eACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,6DACb,4BACEA,UAAU,wCACV4B,QAAS,SAACC,GAAD,OAAOE,EAAWnB,EAAQC,MAFrC,QAMA,kBAAC0B,EAAA,EAAD,CACEC,QAAQ,SACRC,KAAK,SACLzC,UAAU,SACV4B,QAAS,SAACC,GAAD,OACPpC,EAAamB,EAAQC,GAAID,EAAQH,QALrC,oBAkBD,IAAhBlB,EAAKe,QACJ,yBAAKN,UAAU,+CACb,uBAAGA,UAAU,0BAAb,qB,2CCmBG0C,UAtIM,WAAO,IAAD,EACmBC,qBAAWC,KAA/CC,EADiB,EACjBA,SAAUC,EADO,EACPA,SAAUC,EADH,EACGA,KAAMC,EADT,EACSA,MADT,EAEGC,mBAAS,IAFZ,mBAElBzD,EAFkB,KAEV0D,EAFU,OAGKD,oBAAS,GAHd,mBAGlBjB,EAHkB,KAGTmB,EAHS,OAIOF,oBAAS,GAJhB,mBAIlBG,EAJkB,KAIRC,EAJQ,OAKOJ,oBAAS,GALhB,mBAKlBK,EALkB,KAKRC,EALQ,KAMnBC,EAAUC,cACV1B,EAAa,SAAClB,GAClB2C,EAAQE,KAAR,yBAA+B7C,KAE3BpB,EAAY,uCAAG,WAAOoB,EAAIJ,GAAX,eAAAkD,EAAA,sDACbC,EAAgB,CACpB/C,GAAIgD,cACJzC,QAASiB,KAAKyB,MACdf,KAAMA,EAAKgB,MACXC,UAAU,EACVC,OAAQ,SACRC,QAAS,CACPzD,KAAMA,EACN0D,SAAU,UACVC,YAAa,kCAGjBC,IAAKC,KAAK,CACRC,MAAO,gBACPC,KAAM,oCACNC,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBAClBC,KARH,uCAQQ,WAAOC,GAAP,SAAApB,EAAA,0DACFoB,EAAOC,YADL,iCAGF7B,GAAW,GAHT,SAII8B,YAAcpE,EAAI+C,EAAeZ,EAAjCiC,CAAwCnC,GAJ5C,OAKFuB,IAAKC,KAAK,WAAY,4BAA6B,WACnDnB,GAAW,GANT,gDAQF+B,QAAQC,IAAR,MARE,yDARR,uDAbmB,2CAAH,wDA4ClB,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,CACEC,cAAe,CAAC,CAAE3E,KAAM,OAAQ4E,KAAM,KAAO,CAAE5E,KAAM,oBAEvD,kBAACd,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAAIC,UAAU,QAC5C,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,yBACb,kBAAC,IAAD,CAAM0B,GAAG,yBACP,kBAACa,EAAA,EAAD,KACG,IACD,uBAAGvC,UAAU,oBAFf,kBAMJ,yBAAKA,UAAU,uCACb,0BAAMA,UAAU,QACd,2BACEA,UAAU,gBACVyC,KAAK,SACL6C,YAAY,kBACZC,SAAU,SAAC1D,GAAD,OAAOqB,EAAUrB,EAAE2D,OAAOC,MAAM/E,qBAKlD,yBAAKV,UAAU,kBACb,yBAAKA,UAAU,yBACb,2BAAOA,UAAU,aAAjB,aACA,yBAAKA,UAAU,kBACb,4BACEuE,MAAM,WACN3C,QApCS,WACrByB,GAAY,GACZE,GAAY,IAmCAvD,UACEsD,EACI,yBACA,kCAGN,uBAAGtD,UAAU,iBAEf,4BACEuE,MAAM,UACN3C,QApDS,WACrB2B,GAAY,GACZF,GAAY,IAmDArD,UACEoD,EACI,yBACA,kCAGN,uBAAGpD,UAAU,mCAKpBsD,GAEC,kBAAC,EAAD,CACE/D,KAAMsD,EACNrD,OAAQA,EACRuC,WAAYA,EACZtC,aAAcA,EACduC,QAASA,IAGZoB,GAEC,kBAAC,EAAD,CACE7D,KAAMsD,EACNrD,OAAQA,EACRuC,WAAYA,EACZtC,aAAcA,EACduC,QAASA,Q,iCCxIrB,kCACO,IAkBI6B,EAAS,eAAC1B,EAAD,uDAAQ,GAAR,OAClBuD,OAAOC,gBAAgB,IAAIC,WAAWzD,IAAO0D,QAAO,SAAChF,EAAIiF,GAWvD,OAREjF,IAFFiF,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,MAGP,M,iCChCL,2DAKIG,EAAe,CAAC,KAAM,KAAM,KAAM,KAAM,MACxCtG,EAAMuG,IAAMC,YAChB,SAAUC,EAAMC,GACd,IAAIC,EAAWF,EAAKE,SAChBtG,EAAYoG,EAAKpG,UACjBuG,EAAUH,EAAKI,GACfC,OAAwB,IAAZF,EAAqB,MAAQA,EACzCG,EAAQC,YAA8BP,EAAM,CAAC,WAAY,YAAa,OAEtEQ,EAASC,YAAmBP,EAAU,OACtCQ,EAAQ,GACRC,EAAU,GAyBd,OAxBAd,EAAae,SAAQ,SAAUC,GAC7B,IAEIC,EAAMC,EAAQC,EAFdC,EAAYX,EAAMO,GAItB,UAHOP,EAAMO,GAGI,MAAbI,GAA0C,kBAAdA,EAAwB,CACtD,IAAIC,EAAkBD,EAAUH,KAChCA,OAA2B,IAApBI,GAAoCA,EAC3CH,EAASE,EAAUF,OACnBC,EAAQC,EAAUD,WAElBF,EAAOG,EAGT,IAAIE,EAAqB,OAAbN,EAAoB,IAAMA,EAAW,GACrC,MAARC,GAAcJ,EAAMpD,MAAc,IAATwD,EAAgB,GAAKN,EAASW,EAAQ,GAAKX,EAASW,EAAQ,IAAML,GAClF,MAATE,GAAeL,EAAQrD,KAAK,QAAU6D,EAAQ,IAAMH,GAC1C,MAAVD,GAAgBJ,EAAQrD,KAAK,SAAW6D,EAAQ,IAAMJ,MAGvDL,EAAMxG,QACTwG,EAAMpD,KAAKkD,GAGOV,IAAMsB,cAAcf,EAAWgB,YAAS,GAAIf,EAAO,CACrEL,IAAKA,EACLrG,UAAW0H,IAAWC,WAAM,EAAQ,CAAC3H,GAAW4H,OAAOd,EAAOC,UAGlEpH,EAAIkI,YAAc,MACHlI,O,iCC/Cf,2DAQID,EAAYwG,IAAMC,YAAW,SAAUC,EAAMC,GAC/C,IAAIC,EAAWF,EAAKE,SAChBwB,EAAQ1B,EAAK0B,MACbvB,EAAUH,EAAKI,GACfC,OAAwB,IAAZF,EAAqB,MAAQA,EACzCvG,EAAYoG,EAAKpG,UACjB0G,EAAQC,YAA8BP,EAAM,CAAC,WAAY,QAAS,KAAM,cAExEQ,EAASC,YAAmBP,EAAU,aACtCyB,EAA0B,kBAAVD,EAAqB,IAAMA,EAAQ,SACvD,OAAoB5B,IAAMsB,cAAcf,EAAWgB,YAAS,CAC1DpB,IAAKA,GACJK,EAAO,CACR1G,UAAW0H,IAAW1H,EAAW8H,EAAQ,GAAKlB,EAASmB,EAASnB,SAGpElH,EAAUmI,YAAc,YACxBnI,EAAUsI,aApBS,CACjBF,OAAO,GAoBMpI","file":"static/js/27.604c05c4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Dropdown, Col, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nconst ListView = ({ list, search, handleDelete }) => {\r\n  const theadEl = [\r\n    \"NAME\",\r\n    \"BIRTH DATE\",\r\n    \"ADDRESS\",\r\n    \"COURSE\",\r\n    \"YEAR LEVEL\",\r\n    \"GENDER\",\r\n    \"DATE ADDED\",\r\n    \"STATUS\",\r\n    \"ACTIONS\",\r\n  ];\r\n  return (\r\n    <Container>\r\n      <Col lg={12} md={12} sm={8} xs={12} className=\"mb-4\">\r\n        <div className=\"card border-0\">\r\n          <div className=\"card-body border-0\">\r\n            <table className=\"table \">\r\n              <thead>\r\n                <tr className=\"ul-widget6__tr--sticky-th\">\r\n                  {theadEl.map((head, idx) => (\r\n                    <th key={idx} scope=\"col\" className=\"border-0 text-primary\">\r\n                      {head}\r\n                    </th>\r\n                  ))}\r\n                </tr>\r\n              </thead>\r\n              {list.length !== 0 && (\r\n                <tbody>\r\n                  {list\r\n                    .filter((data) =>\r\n                      search === \"\"\r\n                        ? data\r\n                        : data.name.toLowerCase().includes(search)\r\n                    )\r\n                    .map((student) => (\r\n                      <tr\r\n                        className=\"border-bottom border-dotted\"\r\n                        key={student.id}\r\n                      >\r\n                        <td className=\"border-0\">\r\n                          <span>{student.name}</span>\r\n                        </td>\r\n                        <td className=\"border-0\">{student.birthDate}</td>\r\n                        <td className=\"border-0\">\r\n                          <span>{student.address}</span>\r\n                        </td>\r\n                        <td className=\"border-0\">{student.course}</td>\r\n                        <td className=\"border-0\">{student.yearLevel}</td>\r\n                        <td className=\"border-0\">{student.gender}</td>\r\n                        <td className=\"border-0\">\r\n                          {\" \"}\r\n                          {format(student.created, \"yyyy/MM/dd HH:mm: a\")}\r\n                        </td>\r\n                        <td className=\"border-0\">\r\n                          <span\r\n                            class={`badge badge-pill ${\r\n                              student.status === \"Regular\"\r\n                                ? \"badge-success\"\r\n                                : \"badge-danger\"\r\n                            }`}\r\n                          >\r\n                            {student.status}\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"border-0\">\r\n                          <Dropdown>\r\n                            <Dropdown.Toggle className=\" mr-3 mb-3 toggle-hidden bg-white border-none d-flex flex-column\">\r\n                              <span className=\"_dot _inline-dot bg-primary mb-1\"></span>\r\n                              <span className=\"_dot _inline-dot bg-primary mb-1\"></span>\r\n                              <span className=\"_dot _inline-dot bg-primary\"></span>\r\n                            </Dropdown.Toggle>\r\n                            <Dropdown.Menu>\r\n                              <Link\r\n                                to={`/students/edit/${student.id}`}\r\n                                className=\"dropdown-item cursor-pointer\"\r\n                              >\r\n                                Edit\r\n                              </Link>\r\n                              <Dropdown.Item\r\n                                onClick={(e) =>\r\n                                  handleDelete(student.id, student.name)\r\n                                }\r\n                                className=\"dropdown-item cursor-pointer\"\r\n                              >\r\n                                Delete\r\n                              </Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                          </Dropdown>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              )}\r\n            </table>\r\n          </div>\r\n          {list.length === 0 && (\r\n            <div className=\"mx-auto border border-light rounded p-3 pb-0 mb-5\">\r\n              <p className=\"text-center text-muted\">No Data Found</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Col>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ListView;\r\n","import React from \"react\";\r\nimport LetteredAvatar from \"react-lettered-avatar\";\r\nimport { format } from \"date-fns\";\r\nimport { Col, Container, Button, Spinner } from \"react-bootstrap\";\r\n// Students list card view\r\nconst CardView = ({ list, handleEdit, search, handleDelete, loading }) => {\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Col lg={12} md={12} sm={8} xs={12} className=\"mb-4\">\r\n          <div className=\"row\">\r\n            {list\r\n              .filter((data) =>\r\n                search === \"\" ? data : data.name.toLowerCase().includes(search)\r\n              )\r\n              .map((student) => (\r\n                <div\r\n                  key={student.id}\r\n                  className=\"app-card text-sm col-lg-4 col-sm-4\"\r\n                >\r\n                  <div className=\" border-none shadow card\">\r\n                    <div className=\"clearFix\">\r\n                      <div\r\n                        className={`${\r\n                          student.status === \"Regular\"\r\n                            ? \"text-success\"\r\n                            : \"text-danger\"\r\n                        } float-left p-2`}\r\n                      >\r\n                        <strong>{student.status}</strong>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\".d-block mx-auto mw-100 p-3\">\r\n                      <LetteredAvatar\r\n                        backgroundColor=\"#55535F\"\r\n                        color=\"#fff\"\r\n                        size={80}\r\n                        name={student.name}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{ backgroundColor: \"#E7E5F1\" }}\r\n                      className=\".d-block mw-100 \"\r\n                    >\r\n                      <p className=\"font-weight-bold text-15 text-center p-2\">{`${student.name}`}</p>\r\n                    </div>\r\n                    <div className=\"d-flex flex-row justify-content-between py-2 px-2 align-items-center\">\r\n                      <span className=\"text-12 font-weight-bold \">\r\n                        Date added:\r\n                      </span>\r\n                      <span className=\"text-12\">\r\n                        {format(\r\n                          new Date(student.created),\r\n                          \"MM/dd/yyyy HH:mm a\"\r\n                        )}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"d-flex flex-row justify-content-between py-2 px-2 align-items-center\">\r\n                      <span className=\"text-12 font-weight-semibold \">\r\n                        Course:\r\n                      </span>\r\n                      <span className=\"text-12\">{student.course}</span>\r\n                    </div>\r\n                    <div className=\"d-flex flex-row justify-content-between py-2 px-2 align-items-center\">\r\n                      <span className=\"text-12 font-weight-semibold \">\r\n                        Year Level:\r\n                      </span>\r\n                      <span className=\"text-12\">{student.yearLevel}</span>\r\n                    </div>\r\n                    <div className=\"d-flex flex-row justify-content-between py-2 px-2 align-items-center\">\r\n                      <span className=\"text-12 font-weight-semibold \">\r\n                        Birth Date:\r\n                      </span>\r\n                      <span className=\"text-12\">{student.birthDate}</span>\r\n                    </div>\r\n                    <div className=\"d-flex flex-row justify-content-between py-2 px-2 align-items-center\">\r\n                      <span className=\"text-12 font-weight-semibold \">\r\n                        Gender:\r\n                      </span>\r\n                      <span className=\"text-12\">{student.gender}</span>\r\n                    </div>\r\n                    <div className=\"d-flex flex-row justify-content-between py-2 px-2 align-items-center\">\r\n                      <span className=\"text-12 font-weight-semibold \">\r\n                        Address:\r\n                      </span>\r\n                      <span className=\"text-12\">{student.address}</span>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex flex-row justify-content-between py-2 px-2 align-items-center\">\r\n                      <span className=\"text-12 font-weight-semibold \">\r\n                        Phone:\r\n                      </span>\r\n                      <span className=\"text-12\">{student.phone}</span>\r\n                    </div>\r\n\r\n                    <div className=\"card-footer\">\r\n                      <div className=\"mc-footer\">\r\n                        <div className=\"d-flex flex-row justify-content-center align-items-center\">\r\n                          <button\r\n                            className=\"btn btn-info px-2 text-12 py-1 mr-2  \"\r\n                            onClick={(e) => handleEdit(student.id)}\r\n                          >\r\n                            Edit\r\n                          </button>\r\n                          <Button\r\n                            variant=\"danger\"\r\n                            type=\"submit\"\r\n                            className=\"btn-sm\"\r\n                            onClick={(e) =>\r\n                              handleDelete(student.id, student.name)\r\n                            }\r\n                          >\r\n                            Delete\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </Col>\r\n        {list.length === 0 && (\r\n          <div className=\"d-flex justify-content-center p-3 pb-0 mb-5\">\r\n            <p className=\"text-center text-muted\">No Data Found</p>\r\n          </div>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardView;\r\n","import React, { useContext, useState, Fragment } from \"react\";\r\nimport AppContext from \"app/appContext\";\r\nimport { Col, Button } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport ListView from \"./ListView\";\r\nimport CardView from \"./CardView\";\r\nimport { Breadcrumb } from \"@gull\";\r\nimport { deleteStudent } from \"app/reducers/actions/ClassroomActions\";\r\nimport { nanoid } from \"nanoid\";\r\nimport Swal from \"sweetalert2\";\r\nconst StudentsList = () => {\r\n  const { students, dispatch, user, token } = useContext(AppContext);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [cardView, setCardView] = useState(true);\r\n  const [listView, setListView] = useState(false);\r\n  const history = useHistory();\r\n  const handleEdit = (id) => {\r\n    history.push(`/students/edit/${id}`);\r\n  };\r\n  const handleDelete = async (id, name) => {\r\n    const notifications = {\r\n      id: nanoid(),\r\n      created: Date.now(),\r\n      user: user.email,\r\n      isViewed: false,\r\n      action: \"delete\",\r\n      content: {\r\n        name: name,\r\n        location: \"teacher\",\r\n        description: \"click to see more information\",\r\n      },\r\n    };\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        try {\r\n          setLoading(true);\r\n          await deleteStudent(id, notifications, token)(dispatch);\r\n          Swal.fire(\"Deleted!\", \"Student has been deleted.\", \"success\");\r\n          setLoading(false);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  // Change to Card View function\r\n  const handleCardView = () => {\r\n    setListView(false);\r\n    setCardView(true);\r\n  };\r\n  // Change to List View function\r\n  const handleListView = () => {\r\n    setCardView(false);\r\n    setListView(true);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumb\r\n        routeSegments={[{ name: \"Home\", path: \"/\" }, { name: \"Students List\" }]}\r\n      />\r\n      <Col lg={12} md={12} sm={8} xs={12} className=\"mb-4\">\r\n        <div className=\"ul-widget__head border-0\">\r\n          <div className=\"ul-widget__head-label\">\r\n            <Link to=\"/students/add-student\">\r\n              <Button>\r\n                {\" \"}\r\n                <i className=\"nav-icon i-Add \"></i> Add Student\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n          <div className=\"d-flex flex-row justify-content-end\">\r\n            <form className=\"mr-5\">\r\n              <input\r\n                className=\"form-control \"\r\n                type=\"search\"\r\n                placeholder=\"Search Here....\"\r\n                onChange={(e) => setSearch(e.target.value.toLowerCase())}\r\n              />\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-12 mt-5\">\r\n          <div className=\"text-right form-group\">\r\n            <label className=\"text-dark\">View By: </label>\r\n            <div className=\"btn-group ml-1\">\r\n              <button\r\n                title=\"ListView\"\r\n                onClick={handleListView}\r\n                className={\r\n                  listView\r\n                    ? \"btn btn-primary btn-sm\"\r\n                    : \"btn btn-outline-primary btn-sm\"\r\n                }\r\n              >\r\n                <i className=\"i-Newspaper\"></i>\r\n              </button>\r\n              <button\r\n                title=\"Widgets\"\r\n                onClick={handleCardView}\r\n                className={\r\n                  cardView\r\n                    ? \"btn btn-primary btn-sm\"\r\n                    : \"btn btn-outline-primary btn-sm\"\r\n                }\r\n              >\r\n                <i className=\"i-Split-Four-Square-Window\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {listView && (\r\n          // List View Component\r\n          <ListView\r\n            list={students}\r\n            search={search}\r\n            handleEdit={handleEdit}\r\n            handleDelete={handleDelete}\r\n            loading={loading}\r\n          />\r\n        )}\r\n        {cardView && (\r\n          // Card View Component\r\n          <CardView\r\n            list={students}\r\n            search={search}\r\n            handleEdit={handleEdit}\r\n            handleDelete={handleDelete}\r\n            loading={loading}\r\n          />\r\n        )}\r\n      </Col>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default StudentsList;\r\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span, offset, order;\n\n    if (propValue != null && typeof propValue === 'object') {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span != null) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false\n};\nvar Container = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      fluid = _ref.fluid,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"fluid\", \"as\", \"className\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'container');\n  var suffix = typeof fluid === 'string' ? \"-\" + fluid : '-fluid';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, fluid ? \"\" + prefix + suffix : prefix)\n  }));\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;"],"sourceRoot":""}