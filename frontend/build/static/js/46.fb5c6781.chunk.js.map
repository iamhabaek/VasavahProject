{"version":3,"sources":["app/views/users/UpdatePassword.js","app/views/users/ViewProfile.js"],"names":["basicFormSchema","yup","shape","oldPassword","required","newPassword","confirmPassword","oneOf","UpdatePassword","uid","name","props","useState","show","setShow","loading","setLoading","history","useHistory","handleClose","handleSubmit","values","a","user","firebase","auth","currentUser","credential","EmailAuthProvider","email","reauthenticateWithCredential","then","updatePassword","Swal","fire","logout","push","catch","error","console","log","className","onClick","Modal","onHide","initialValues","validationSchema","onSubmit","errors","touched","handleChange","handleBlur","isSubmitting","noValidate","Header","closeButton","Title","Body","classList","htmlFor","type","id","placeholder","value","onChange","onBlur","Footer","Button","variant","disabled","Spinner","as","size","role","aria-hidden","animation","ViewProfile","useContext","AppContext","setUser","teachers","token","dispatch","photoURL","image","setImage","upload","setUpload","isSelected","setIsSelected","teacher","find","handleSave","formData","FormData","append","config","headers","Authorization","api","put","response","data","message","src","alt","displayName","round","style","outline","e","file","target","files","URL","createObjectURL","handleFileSelect","accept","teacherName","birthDate","gender","phone","format","created","subjects","map","subject","idx","key","label"],"mappings":"+UAUMA,EAAkBC,WAAaC,MAAM,CACzCC,YAAaF,WAAaG,SAAS,6BACnCC,YAAaJ,WAAaG,SAAS,yBACnCE,gBAAiBL,WAEdG,SAAS,wBACTG,MAAM,CAACN,MAAQ,eAAgB,MAAO,0BA2N5BO,EAxNQ,SAAC,GAA4B,EAA1BC,IAA2B,IAAtBC,EAAqB,EAArBA,KAASC,EAAY,gCAC1BC,oBAAS,GADiB,mBAC3CC,EAD2C,KACrCC,EADqC,OAEpBF,oBAAS,GAFW,mBAE3CG,EAF2C,KAElCC,EAFkC,KAG5CC,EAAUC,cACVC,EAAc,WAClBL,GAAQ,IAEJM,EAAY,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,sDACXnB,EAA6BkB,EAA7BlB,YAAaE,EAAgBgB,EAAhBhB,YACfkB,EAAOC,IAASC,OAAOC,YACvBC,EAAaH,IAASC,KAAKG,kBAAkBD,WACjDJ,EAAKM,MACL1B,GAGFoB,EACGO,6BAA6BH,GAC7BI,MAAK,WAEJR,EACGS,eAAe3B,GACf0B,KAFH,sBAEQ,sBAAAT,EAAA,6DACJN,GAAW,GADP,SAEEiB,IAAKC,KAAK,WAAY,mBAAoB,WAF5C,OAGJpB,GAAQ,GACRqB,cACAlB,EAAQmB,KAAK,mBALT,4CAOLC,OAAM,SAAUC,GACfL,IAAKC,KAAK,UAAW,uBAAwB,SAC7CK,QAAQC,IAAIF,SAGjBD,OAAM,SAAUC,GACfL,IAAKC,KACH,UACA,8CACA,SAEFK,QAAQC,IAAIF,MAEhBtB,GAAW,GAlCQ,2CAAH,sDAoClB,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAMyB,UAAU,kBAAkBC,QAAS,kBAAM5B,GAAQ,KACtDJ,GAEH,kBAACiC,EAAA,EAAD,eAAO9B,KAAMA,EAAM+B,OAAQzB,GAAiBR,GAC1C,kBAAC,IAAD,CACEkC,cAAe,CACb1C,YAAa,GACbE,YAAa,GACbC,gBAAiB,IAEnBwC,iBAAkB9C,EAClB+C,SAAU3B,IAET,YAQM,IAPLC,EAOI,EAPJA,OACA2B,EAMI,EANJA,OACAC,EAKI,EALJA,QACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,WACA/B,EAEI,EAFJA,aAEI,EADJgC,aAEA,OACE,0BACEX,UAAU,mBACVM,SAAU3B,EACViC,YAAU,GAEV,kBAACV,EAAA,EAAMW,OAAP,CAAcC,aAAW,GACvB,kBAACZ,EAAA,EAAMa,MAAP,KACE,uBAAGf,UAAU,aADf,qBAIF,kBAACE,EAAA,EAAMc,KAAP,KACE,+DAEE,0BAAMhB,UAAU,eAAhB,KAFF,YAKA,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,wBACb,yBACEA,UAAWiB,YAAU,CACnB,QAAQ,EACR,eACGV,EAAO7C,aAAe8C,EAAQ9C,YACjC,gBACE6C,EAAO7C,aAAe8C,EAAQ9C,eAGlC,2BACEwD,QAAQ,cACRlB,UAAU,oBAFZ,mBAImB,IACjB,0BAAMA,UAAU,gCAAhB,MAIF,2BACEmB,KAAK,WACLnB,UAAU,eACVoB,GAAG,cACHC,YAAY,mBACZpD,KAAK,cACLqD,MAAO1C,EAAOlB,YACd6D,SAAUd,EACVe,OAAQd,EACR/C,UAAQ,IAEV,yBAAKqC,UAAU,oBACZO,EAAO7C,cAGZ,yBACEsC,UAAWiB,YAAU,CACnB,QAAQ,EACR,eACGV,EAAO3C,aAAe4C,EAAQ5C,YACjC,gBACE2C,EAAO3C,aAAe4C,EAAQ5C,eAGlC,2BACEsD,QAAQ,cACRlB,UAAU,oBAFZ,eAIe,IACb,0BAAMA,UAAU,gCAAhB,MAIF,2BACEmB,KAAK,WACLnB,UAAU,eACVoB,GAAG,cACHC,YAAY,mBACZpD,KAAK,cACLqD,MAAO1C,EAAOhB,YACd2D,SAAUd,EACVe,OAAQd,EACR/C,UAAQ,IAEV,yBAAKqC,UAAU,oBACZO,EAAO3C,cAGZ,yBACEoC,UAAWiB,YAAU,CACnB,QAAQ,EACR,eACGV,EAAO1C,iBAAmB2C,EAAQ3C,gBACrC,gBACE0C,EAAO1C,iBAAmB2C,EAAQ3C,mBAGtC,2BACEqD,QAAQ,kBACRlB,UAAU,oBAFZ,kBAIkB,IAChB,0BAAMA,UAAU,gCAAhB,MAIF,2BACEmB,KAAK,WACLnB,UAAU,eACVoB,GAAG,kBACHC,YAAY,kBACZpD,KAAK,kBACLqD,MAAO1C,EAAOf,gBACd0D,SAAUd,EACVe,OAAQd,EACR/C,UAAQ,IAEV,yBAAKqC,UAAU,oBACZO,EAAO1C,qBAMlB,kBAACqC,EAAA,EAAMuB,OAAP,KACE,kBAACC,EAAA,EAAD,CAAQC,QAAQ,SAAS1B,QAASvB,GAAlC,UAGA,kBAACgD,EAAA,EAAD,CAAQE,SAAUtD,EAASqD,QAAQ,OAAOR,KAAK,UAC5C7C,GACC,kBAACuD,EAAA,EAAD,CACEC,GAAG,OACHH,QAAQ,QACRI,KAAK,KACLC,KAAK,SACLC,cAAY,OACZC,UAAU,SACVlC,UAAU,SAThB,wBCoGHmC,UA9SK,WAAO,IAAD,EAC6BC,qBAAWC,KAAxDvD,EADgB,EAChBA,KAAMwD,EADU,EACVA,QAASC,EADC,EACDA,SAAoBC,GADnB,EACSC,SADT,EACmBD,OADnB,EAEErE,mBAASW,EAAK4D,UAFhB,mBAEjBC,EAFiB,KAEVC,EAFU,OAGIzE,qBAHJ,mBAGjB0E,EAHiB,KAGTC,EAHS,OAIY3E,oBAAS,GAJrB,mBAIjB4E,EAJiB,KAILC,EAJK,OAKM7E,oBAAS,GALf,mBAKjBG,EALiB,KAKRC,EALQ,KAMlBC,EAAUC,cACVwE,EAAUV,EAASW,MAAK,SAACD,GAAD,OAAaA,EAAQ7B,KAAOtC,EAAKd,OAYzDmF,EAAU,uCAAG,kCAAAtE,EAAA,6DACZgE,GACHrD,IAAKC,KAAK,uBAAwB,UAEhC2D,EAAW,IAAIC,UAEVC,OAAO,UAAWT,GANV,SAQTU,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYjB,KAG7BjE,GAAW,GAbI,SAcQmF,IAAIC,IAAJ,iBAAkB7E,EAAKd,KAAOoF,EAAUG,GAdhD,cAcTK,EAdS,iBAeIA,EAASC,KAAKA,KAflB,QAeTA,EAfS,OAgBfvB,EAAQ,eAAKxD,EAAN,CAAY4D,SAAUmB,KAC7BjB,EAASiB,GACTb,GAAc,GACdF,EAAU,IACVvE,GAAW,GACXC,EAAQmB,KAAR,wBAA8Bb,EAAKd,MArBpB,kDAuBfwB,IAAKC,KAAL,UAAa,KAAMmE,SAASC,KAAKC,SAAW,SAvB7B,0DAAH,qDA0BhB,OACE,yBAAK9D,UAAU,4BACZiD,GACC,6BACE,yBAAKjD,UAAU,mBACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,QACZ2C,GAAS7D,EAAK4D,SACb,yBACE1C,UAAU,iCACV+D,IAAKpB,EACLqB,IAAI,KAGN,kBAAC,IAAD,CACE/F,KAAMa,EAAKmF,YACXlC,KAAM,IACNmC,OAAK,EACLC,MAAO,CAAEC,QAAS,sBAIxB,8BACIrB,EAsBA,6BACE,kBAACrB,EAAA,EAAD,CACEzB,QAASkD,EACTvB,SAAUtD,EACVqD,QAAQ,UACRR,KAAK,SACLY,KAAK,MAEJzD,GACC,kBAACuD,EAAA,EAAD,CACEC,GAAG,OACHH,QAAQ,QACRI,KAAK,KACLC,KAAK,SACLC,cAAY,OACZC,UAAU,SACVlC,UAAU,SAfhB,UAqBA,4BACEC,QArGH,WACnB6C,GAAU,GACVF,EAAS9D,EAAK4D,UACdM,GAAc,IAmGQhD,UAAU,+BAFZ,WA3CF,yBAAKA,UAAU,IACb,2BAAOkB,QAAQ,sBACb,kBAACQ,EAAA,EAAD,CACE1B,UAAU,mCACV8B,GAAG,QAEH,yBAAK9B,UAAU,oBACb,uBAAGA,UAAU,oBAAb,KACA,0BAAMA,UAAU,UAAhB,kBAIN,2BACEA,UAAU,SACVuB,SAAU,SAAC8C,GAAD,OA7ET,SAACA,GACxB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GAC5B5B,EAAS6B,IAAIC,gBAAgBJ,IAC7BxB,EAAUwB,GACVtB,GAAc,GAyEyB2B,CAAiBN,IAClCO,OAAO,UACPxD,GAAG,qBACHD,KAAK,WAmCb,uBAAGnB,UAAU,sBAAsBlB,EAAKmF,aACxC,uBAAGjE,UAAU,kBAAkBlB,EAAKM,WAM5C,yBAAKY,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,eACZ,IACD,uBAAGA,UAAU,yBACb,wDAEF,yBAAKA,UAAU,OACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,uBAAGA,UAAU,kCAAb,WAKJ,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,uBAAGA,UAAU,YAAYiD,EAAQ4B,eAGrC,yBAAK7E,UAAU,YACb,yBAAKA,UAAU,cACb,uBAAGA,UAAU,kCAAb,oBAKJ,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,uBAAGA,UAAU,YAAYiD,EAAQ6B,aAGrC,yBAAK9E,UAAU,YACZ,IACD,yBAAKA,UAAU,cACb,uBAAGA,UAAU,kCAAb,aAKJ,yBAAKA,UAAU,YACZ,IACD,yBAAKA,UAAU,cACb,uBAAGA,UAAU,WAAWiD,EAAQ8B,UAGpC,yBAAK/E,UAAU,YACZ,IACD,yBAAKA,UAAU,cACb,uBAAGA,UAAU,kCAAb,UAEK,MAGT,yBAAKA,UAAU,YACZ,IACD,yBAAKA,UAAU,cACb,uBAAGA,UAAU,WAAWiD,EAAQ+B,SAGpC,yBAAKhF,UAAU,YACZ,IACD,yBAAKA,UAAU,cACb,uBAAGA,UAAU,kCAAb,YAKJ,yBAAKA,UAAU,YACZ,IACD,yBAAKA,UAAU,cACb,uBAAGA,UAAU,WAAWiD,EAAQ7D,SAGpC,yBAAKY,UAAU,YACZ,IACD,yBAAKA,UAAU,cACb,uBAAGA,UAAU,kCAAb,eAKJ,yBAAKA,UAAU,YACZ,IACD,yBAAKA,UAAU,cACE,aAAdlB,EAAKkD,KAAsB,UAAY,YAKhD,yBAAKhC,UAAU,iBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACZ,IACD,yBAAKA,UAAU,cACb,uBAAGA,UAAU,kCAAb,iBAKJ,yBAAKA,UAAU,YACZ,IACD,yBAAKA,UAAU,cACb,uBAAGA,UAAU,WACViF,kBAAOhC,EAAQiC,QAAS,iBAI/B,yBAAKlF,UAAU,YACZ,IACD,yBAAKA,UAAU,cACb,uBAAGA,UAAU,kCAAb,oBAKJ,yBAAKA,UAAU,YACZ,IACD,yBAAKA,UAAU,cACb,uBAAGA,UAAU,YAAYiD,EAAQ6B,aAGrC,yBAAK9E,UAAU,YACZ,IACD,yBAAKA,UAAU,cACb,uBAAGA,UAAU,kCAAb,eAKJ,yBAAKA,UAAU,YACZ,IACD,yBAAKA,UAAU,cACb,uBAAGA,UAAU,WACViD,EAAQkC,SAASC,KAAI,SAACC,EAASC,GAAV,OACpB,0BAAMC,IAAKD,GAAMD,EAAQG,MAAzB,YAKR,yBAAKxF,UAAU,YACZ,IACD,yBAAKA,UAAU,cACb,uBAAGA,UAAU,kCAAb,eAKJ,yBAAKA,UAAU,YACZ,IACD,yBAAKA,UAAU,cACb,kBAAC,EAAD,CACEhC,IAAKc,EAAKd,IACVC,KAAK","file":"static/js/46.fb5c6781.chunk.js","sourcesContent":["import React, { useState, Fragment } from \"react\";\r\nimport { Modal, Button, Spinner } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { classList } from \"@utils\";\r\nimport Swal from \"sweetalert2\";\r\nimport { auth } from \"firebase/app\";\r\nimport { logout } from \"app/services/AuthService\";\r\nimport firebase from \"firebase/app\";\r\nconst basicFormSchema = yup.object().shape({\r\n  oldPassword: yup.string().required(\"Current password is empty\"),\r\n  newPassword: yup.string().required(\"New password is empty\"),\r\n  confirmPassword: yup\r\n    .string()\r\n    .required(\"Retype your password\")\r\n    .oneOf([yup.ref(\"newPassword\"), null], \"Passwords must match\"),\r\n});\r\n\r\nconst UpdatePassword = ({ uid, name, ...props }) => {\r\n  const [show, setShow] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n  const handleSubmit = async (values) => {\r\n    const { oldPassword, newPassword } = values;\r\n    const user = firebase.auth().currentUser;\r\n    const credential = firebase.auth.EmailAuthProvider.credential(\r\n      user.email,\r\n      oldPassword\r\n    );\r\n\r\n    user\r\n      .reauthenticateWithCredential(credential)\r\n      .then(function async() {\r\n        // User re-authenticated.\r\n        user\r\n          .updatePassword(newPassword)\r\n          .then(async () => {\r\n            setLoading(true);\r\n            await Swal.fire(\"Success!\", \"Password updated\", \"success\");\r\n            setShow(false);\r\n            logout();\r\n            history.push(\"/session/signin\");\r\n          })\r\n          .catch(function (error) {\r\n            Swal.fire(\"Failed!\", \"Password not updated\", \"error\");\r\n            console.log(error);\r\n          });\r\n      })\r\n      .catch(function (error) {\r\n        Swal.fire(\r\n          \"Failed!\",\r\n          \"Incorrect current password please try again\",\r\n          \"error\"\r\n        );\r\n        console.log(error);\r\n      });\r\n    setLoading(false);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Link className=\"text-capitalize\" onClick={() => setShow(true)}>\r\n        {name}\r\n      </Link>\r\n      <Modal show={show} onHide={handleClose} {...props}>\r\n        <Formik\r\n          initialValues={{\r\n            oldPassword: \"\",\r\n            newPassword: \"\",\r\n            confirmPassword: \"\",\r\n          }}\r\n          validationSchema={basicFormSchema}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isSubmitting,\r\n          }) => {\r\n            return (\r\n              <form\r\n                className=\"needs-validation\"\r\n                onSubmit={handleSubmit}\r\n                noValidate\r\n              >\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>\r\n                    <i className=\"i-Lock-2\"></i> Change Password\r\n                  </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <span>\r\n                    Please fill all the required (\r\n                    <span className=\"text-danger\">*</span>) fields\r\n                  </span>\r\n\r\n                  <div className=\"form-row mt-2\">\r\n                    <div className=\"form-group col-md-12\">\r\n                      <div\r\n                        className={classList({\r\n                          \"mx-0\": true,\r\n                          \"valid-field\":\r\n                            !errors.oldPassword && touched.oldPassword,\r\n                          \"invalid-field\":\r\n                            errors.oldPassword && touched.oldPassword,\r\n                        })}\r\n                      >\r\n                        <label\r\n                          htmlFor=\"oldPassword\"\r\n                          className=\"font-weight-bold\"\r\n                        >\r\n                          Current Password{\" \"}\r\n                          <span className=\"text-danger font-weight-bold\">\r\n                            *\r\n                          </span>\r\n                        </label>\r\n                        <input\r\n                          type=\"password\"\r\n                          className=\"form-control\"\r\n                          id=\"oldPassword\"\r\n                          placeholder=\"Current password\"\r\n                          name=\"oldPassword\"\r\n                          value={values.oldPassword}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          required\r\n                        />\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.oldPassword}\r\n                        </div>\r\n                      </div>\r\n                      <div\r\n                        className={classList({\r\n                          \"mx-0\": true,\r\n                          \"valid-field\":\r\n                            !errors.newPassword && touched.newPassword,\r\n                          \"invalid-field\":\r\n                            errors.newPassword && touched.newPassword,\r\n                        })}\r\n                      >\r\n                        <label\r\n                          htmlFor=\"newPassword\"\r\n                          className=\"font-weight-bold\"\r\n                        >\r\n                          New Password{\" \"}\r\n                          <span className=\"text-danger font-weight-bold\">\r\n                            *\r\n                          </span>\r\n                        </label>\r\n                        <input\r\n                          type=\"password\"\r\n                          className=\"form-control\"\r\n                          id=\"newPassword\"\r\n                          placeholder=\"Current password\"\r\n                          name=\"newPassword\"\r\n                          value={values.newPassword}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          required\r\n                        />\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.newPassword}\r\n                        </div>\r\n                      </div>\r\n                      <div\r\n                        className={classList({\r\n                          \"mx-0\": true,\r\n                          \"valid-field\":\r\n                            !errors.confirmPassword && touched.confirmPassword,\r\n                          \"invalid-field\":\r\n                            errors.confirmPassword && touched.confirmPassword,\r\n                        })}\r\n                      >\r\n                        <label\r\n                          htmlFor=\"confirmPassword\"\r\n                          className=\"font-weight-bold\"\r\n                        >\r\n                          Retype Password{\" \"}\r\n                          <span className=\"text-danger font-weight-bold\">\r\n                            *\r\n                          </span>\r\n                        </label>\r\n                        <input\r\n                          type=\"password\"\r\n                          className=\"form-control\"\r\n                          id=\"confirmPassword\"\r\n                          placeholder=\"Retype password\"\r\n                          name=\"confirmPassword\"\r\n                          value={values.confirmPassword}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          required\r\n                        />\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.confirmPassword}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <Button variant=\"danger\" onClick={handleClose}>\r\n                    Cancel\r\n                  </Button>\r\n                  <Button disabled={loading} variant=\"info\" type=\"submit\">\r\n                    {loading && (\r\n                      <Spinner\r\n                        as=\"span\"\r\n                        variant=\"light\"\r\n                        size=\"sm\"\r\n                        role=\"status\"\r\n                        aria-hidden=\"true\"\r\n                        animation=\"border\"\r\n                        className=\"mr-1\"\r\n                      />\r\n                    )}\r\n                    Save Changes\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdatePassword;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Avatar from \"react-avatar\";\r\nimport AppContext from \"app/appContext\";\r\nimport api from \"app/api/api\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Button, Spinner } from \"react-bootstrap\";\r\nimport { format } from \"date-fns\";\r\nimport UpdatePassword from \"./UpdatePassword\";\r\nconst ViewProfile = () => {\r\n  const { user, setUser, teachers, dispatch, token } = useContext(AppContext);\r\n  const [image, setImage] = useState(user.photoURL);\r\n  const [upload, setUpload] = useState();\r\n  const [isSelected, setIsSelected] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n  const teacher = teachers.find((teacher) => teacher.id === user.uid);\r\n  const handleFileSelect = (e) => {\r\n    const file = e.target.files[0];\r\n    setImage(URL.createObjectURL(file));\r\n    setUpload(file);\r\n    setIsSelected(true);\r\n  };\r\n  const handleCancel = () => {\r\n    setUpload(false);\r\n    setImage(user.photoURL);\r\n    setIsSelected(false);\r\n  };\r\n  const handleSave = async () => {\r\n    if (!upload) {\r\n      Swal.fire(\"Please choose a file\", \"error\");\r\n    }\r\n    let formData = new FormData();\r\n\r\n    formData.append(\"profile\", upload);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      };\r\n      setLoading(true);\r\n      const response = await api.put(`/users/${user.uid}`, formData, config);\r\n      const data = await response.data.data;\r\n      setUser({ ...user, photoURL: data });\r\n      setImage(data);\r\n      setIsSelected(false);\r\n      setUpload(\"\");\r\n      setLoading(false);\r\n      history.push(`/user/profile/${user.uid}`);\r\n    } catch (error) {\r\n      Swal.fire(`${error.response.data.message}`, \"error\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"col-lg-12 col-xl-12 mt-3\">\r\n      {teacher && (\r\n        <div>\r\n          <div className=\"card bg-primary\">\r\n            <div className=\"card-body p-5\">\r\n              <div className=\"user-profile mb-4\">\r\n                <div className=\"ul-widget-card__user-info\">\r\n                  <div className=\"mb-3\">\r\n                    {image || user.photoURL ? (\r\n                      <img\r\n                        className=\"profile-picture avatar-xl mb-2\"\r\n                        src={image}\r\n                        alt=\"\"\r\n                      />\r\n                    ) : (\r\n                      <Avatar\r\n                        name={user.displayName}\r\n                        size={130}\r\n                        round\r\n                        style={{ outline: \"4px solid white\" }}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                  <form>\r\n                    {!isSelected ? (\r\n                      <div className=\"\">\r\n                        <label htmlFor=\"upload-single-file\">\r\n                          <Button\r\n                            className=\"btn-rounded btn-sm btn-info mt-2\"\r\n                            as=\"span\"\r\n                          >\r\n                            <div className=\"flex flex-middle\">\r\n                              <i className=\"i-Share-on-Cloud\"> </i>\r\n                              <span className=\"text-8\">Choose File</span>\r\n                            </div>\r\n                          </Button>\r\n                        </label>\r\n                        <input\r\n                          className=\"d-none\"\r\n                          onChange={(e) => handleFileSelect(e)}\r\n                          accept=\"image/*\"\r\n                          id=\"upload-single-file\"\r\n                          type=\"file\"\r\n                        />\r\n                      </div>\r\n                    ) : (\r\n                      <div>\r\n                        <Button\r\n                          onClick={handleSave}\r\n                          disabled={loading}\r\n                          variant=\"success\"\r\n                          type=\"submit\"\r\n                          size=\"sm\"\r\n                        >\r\n                          {loading && (\r\n                            <Spinner\r\n                              as=\"span\"\r\n                              variant=\"light\"\r\n                              size=\"sm\"\r\n                              role=\"status\"\r\n                              aria-hidden=\"true\"\r\n                              animation=\"border\"\r\n                              className=\"mr-2\"\r\n                            />\r\n                          )}\r\n                          Submit\r\n                        </Button>\r\n\r\n                        <button\r\n                          onClick={handleCancel}\r\n                          className=\"btn btn-sm btn-warning ml-2\"\r\n                        >\r\n                          Cancel\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                  </form>\r\n                  <p className=\"text-30 text-white\">{user.displayName}</p>\r\n                  <p className=\"text-white m-0\">{user.email}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <div className=\"card mb-4\">\r\n                <div className=\"card-header\">\r\n                  {\" \"}\r\n                  <i className=\"i-Administrator mr-1\"></i>\r\n                  <strong>Account Information</strong>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-6 mt-4\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-lg-5\">\r\n                        <div className=\"form-group\">\r\n                          <p className=\"text-14 ml-4 font-weight-bold \">\r\n                            Name:\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-7\">\r\n                        <div className=\"form-group\">\r\n                          <p className=\"text-14 \">{teacher.teacherName}</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-5\">\r\n                        <div className=\"form-group\">\r\n                          <p className=\"text-14 ml-4 font-weight-bold \">\r\n                            Date of Birth:\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-7\">\r\n                        <div className=\"form-group\">\r\n                          <p className=\"text-14 \">{teacher.birthDate}</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-5\">\r\n                        {\" \"}\r\n                        <div className=\"form-group\">\r\n                          <p className=\"text-14 ml-4 font-weight-bold \">\r\n                            Gender:\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-7\">\r\n                        {\" \"}\r\n                        <div className=\"form-group\">\r\n                          <p className=\"text-14\">{teacher.gender}</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-5\">\r\n                        {\" \"}\r\n                        <div className=\"form-group\">\r\n                          <p className=\"text-14 ml-4 font-weight-bold \">\r\n                            Phone:\r\n                          </p>{\" \"}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-7\">\r\n                        {\" \"}\r\n                        <div className=\"form-group\">\r\n                          <p className=\"text-14\">{teacher.phone}</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-5\">\r\n                        {\" \"}\r\n                        <div className=\"form-group\">\r\n                          <p className=\"text-14 ml-4 font-weight-bold \">\r\n                            Email:\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-7\">\r\n                        {\" \"}\r\n                        <div className=\"form-group\">\r\n                          <p className=\"text-14\">{teacher.email}</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-5\">\r\n                        {\" \"}\r\n                        <div className=\"form-group\">\r\n                          <p className=\"text-14 ml-4 font-weight-bold \">\r\n                            Position:\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-7\">\r\n                        {\" \"}\r\n                        <div className=\"form-group\">\r\n                          {user.role === \"_teacher\" ? \"Teacher\" : \"Admin\"}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-lg-6 mt-4\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-lg-5\">\r\n                        {\" \"}\r\n                        <div className=\"form-group\">\r\n                          <p className=\"text-14 ml-4 font-weight-bold \">\r\n                            Date Hired:\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-7\">\r\n                        {\" \"}\r\n                        <div className=\"form-group\">\r\n                          <p className=\"text-14\">\r\n                            {format(teacher.created, \"yyyy/MM/dd\")}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-5\">\r\n                        {\" \"}\r\n                        <div className=\"form-group\">\r\n                          <p className=\"text-14 ml-4 font-weight-bold \">\r\n                            Date of Birth:\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-7\">\r\n                        {\" \"}\r\n                        <div className=\"form-group\">\r\n                          <p className=\"text-14 \">{teacher.birthDate}</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-5\">\r\n                        {\" \"}\r\n                        <div className=\"form-group\">\r\n                          <p className=\"text-14 ml-4 font-weight-bold \">\r\n                            Subjects:\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-7\">\r\n                        {\" \"}\r\n                        <div className=\"form-group\">\r\n                          <p className=\"text-14\">\r\n                            {teacher.subjects.map((subject, idx) => (\r\n                              <span key={idx}>{subject.label}, </span>\r\n                            ))}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-5\">\r\n                        {\" \"}\r\n                        <div className=\"form-group\">\r\n                          <p className=\"text-14 ml-4 font-weight-bold \">\r\n                            Password:\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-7\">\r\n                        {\" \"}\r\n                        <div className=\"form-group\">\r\n                          <UpdatePassword\r\n                            uid={user.uid}\r\n                            name=\"Change Password\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewProfile;\r\n"],"sourceRoot":""}